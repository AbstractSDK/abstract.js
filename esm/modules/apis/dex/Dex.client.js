/**
 * This file was automatically generated by @cosmwasm/ts-codegen@0.14.0.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */
import { __awaiter, __extends, __generator } from "tslib";
var DexQueryClient = /** @class */ (function () {
    function DexQueryClient(client, contractAddress) {
        var _this = this;
        this.api = function (query) { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.client.queryContractSmart(this.contractAddress, {
                        api: query,
                    })];
            });
        }); };
        this.client = client;
        this.contractAddress = contractAddress;
        this.api = this.api.bind(this);
    }
    return DexQueryClient;
}());
export { DexQueryClient };
var DexClient = /** @class */ (function (_super) {
    __extends(DexClient, _super);
    function DexClient(client, sender, contractAddress) {
        var _this = _super.call(this, client, contractAddress) || this;
        _this.request = function (_a, fee, memo, funds) {
            var proxyAddress = _a.proxyAddress, request = _a.request;
            if (fee === void 0) { fee = 'auto'; }
            return __awaiter(_this, void 0, void 0, function () {
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.execute(this.sender, this.contractAddress, {
                                request: {
                                    proxy_address: proxyAddress,
                                    request: request,
                                },
                            }, fee, memo, funds)];
                        case 1: return [2 /*return*/, _b.sent()];
                    }
                });
            });
        };
        _this.configure = function (msg, fee, memo, funds) {
            if (fee === void 0) { fee = 'auto'; }
            return __awaiter(_this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.client.execute(this.sender, this.contractAddress, {
                                configure: msg,
                            }, fee, memo, funds)];
                        case 1: return [2 /*return*/, _a.sent()];
                    }
                });
            });
        };
        _this.client = client;
        _this.sender = sender;
        _this.contractAddress = contractAddress;
        _this.request = _this.request.bind(_this);
        _this.configure = _this.configure.bind(_this);
        return _this;
    }
    return DexClient;
}(DexQueryClient));
export { DexClient };
