/**
 * This file was automatically generated by @cosmwasm/ts-codegen@0.11.1.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */
import { __assign, __awaiter, __extends, __generator } from "tslib";
var Cw20QueryClient = /** @class */ (function () {
    function Cw20QueryClient(client, contractAddress) {
        var _this = this;
        this.balance = function (_a) {
            var address = _a.address;
            return __awaiter(_this, void 0, void 0, function () {
                return __generator(this, function (_b) {
                    return [2 /*return*/, this.client.queryContractSmart(this.contractAddress, {
                            balance: {
                                address: address,
                            },
                        })];
                });
            });
        };
        this.tokenInfo = function () { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.client.queryContractSmart(this.contractAddress, {
                        token_info: {},
                    })];
            });
        }); };
        this.minter = function () { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.client.queryContractSmart(this.contractAddress, {
                        minter: {},
                    })];
            });
        }); };
        this.allowance = function (_a) {
            var owner = _a.owner, spender = _a.spender;
            return __awaiter(_this, void 0, void 0, function () {
                return __generator(this, function (_b) {
                    return [2 /*return*/, this.client.queryContractSmart(this.contractAddress, {
                            allowance: {
                                owner: owner,
                                spender: spender,
                            },
                        })];
                });
            });
        };
        this.allAllowances = function (_a) {
            var limit = _a.limit, owner = _a.owner, startAfter = _a.startAfter;
            return __awaiter(_this, void 0, void 0, function () {
                return __generator(this, function (_b) {
                    return [2 /*return*/, this.client.queryContractSmart(this.contractAddress, {
                            all_allowances: {
                                limit: limit,
                                owner: owner,
                                start_after: startAfter,
                            },
                        })];
                });
            });
        };
        this.allAccounts = function (_a) {
            var limit = _a.limit, startAfter = _a.startAfter;
            return __awaiter(_this, void 0, void 0, function () {
                return __generator(this, function (_b) {
                    return [2 /*return*/, this.client.queryContractSmart(this.contractAddress, {
                            all_accounts: {
                                limit: limit,
                                start_after: startAfter,
                            },
                        })];
                });
            });
        };
        this.marketingInfo = function () { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.client.queryContractSmart(this.contractAddress, {
                        marketing_info: {},
                    })];
            });
        }); };
        this.downloadLogo = function () { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.client.queryContractSmart(this.contractAddress, {
                        download_logo: {},
                    })];
            });
        }); };
        this.client = client;
        this.contractAddress = contractAddress;
        this.balance = this.balance.bind(this);
        this.tokenInfo = this.tokenInfo.bind(this);
        this.minter = this.minter.bind(this);
        this.allowance = this.allowance.bind(this);
        this.allAllowances = this.allAllowances.bind(this);
        this.allAccounts = this.allAccounts.bind(this);
        this.marketingInfo = this.marketingInfo.bind(this);
        this.downloadLogo = this.downloadLogo.bind(this);
    }
    return Cw20QueryClient;
}());
export { Cw20QueryClient };
var Cw20Client = /** @class */ (function (_super) {
    __extends(Cw20Client, _super);
    function Cw20Client(client, sender, contractAddress) {
        var _this = _super.call(this, client, contractAddress) || this;
        _this.transfer = function (_a, fee, memo, funds) {
            var amount = _a.amount, recipient = _a.recipient;
            if (fee === void 0) { fee = 'auto'; }
            return __awaiter(_this, void 0, void 0, function () {
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.execute(this.sender, this.contractAddress, {
                                transfer: {
                                    amount: amount,
                                    recipient: recipient,
                                },
                            }, fee, memo, funds)];
                        case 1: return [2 /*return*/, _b.sent()];
                    }
                });
            });
        };
        _this.burn = function (_a, fee, memo, funds) {
            var amount = _a.amount;
            if (fee === void 0) { fee = 'auto'; }
            return __awaiter(_this, void 0, void 0, function () {
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.execute(this.sender, this.contractAddress, {
                                burn: {
                                    amount: amount,
                                },
                            }, fee, memo, funds)];
                        case 1: return [2 /*return*/, _b.sent()];
                    }
                });
            });
        };
        _this.send = function (_a, fee, memo, funds) {
            var amount = _a.amount, contract = _a.contract, msg = _a.msg;
            if (fee === void 0) { fee = 'auto'; }
            return __awaiter(_this, void 0, void 0, function () {
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.execute(this.sender, this.contractAddress, {
                                send: {
                                    amount: amount,
                                    contract: contract,
                                    msg: msg,
                                },
                            }, fee, memo, funds)];
                        case 1: return [2 /*return*/, _b.sent()];
                    }
                });
            });
        };
        _this.increaseAllowance = function (_a, fee, memo, funds) {
            var amount = _a.amount, expires = _a.expires, spender = _a.spender;
            if (fee === void 0) { fee = 'auto'; }
            return __awaiter(_this, void 0, void 0, function () {
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.execute(this.sender, this.contractAddress, {
                                increase_allowance: {
                                    amount: amount,
                                    expires: expires,
                                    spender: spender,
                                },
                            }, fee, memo, funds)];
                        case 1: return [2 /*return*/, _b.sent()];
                    }
                });
            });
        };
        _this.decreaseAllowance = function (_a, fee, memo, funds) {
            var amount = _a.amount, expires = _a.expires, spender = _a.spender;
            if (fee === void 0) { fee = 'auto'; }
            return __awaiter(_this, void 0, void 0, function () {
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.execute(this.sender, this.contractAddress, {
                                decrease_allowance: {
                                    amount: amount,
                                    expires: expires,
                                    spender: spender,
                                },
                            }, fee, memo, funds)];
                        case 1: return [2 /*return*/, _b.sent()];
                    }
                });
            });
        };
        _this.transferFrom = function (_a, fee, memo, funds) {
            var amount = _a.amount, owner = _a.owner, recipient = _a.recipient;
            if (fee === void 0) { fee = 'auto'; }
            return __awaiter(_this, void 0, void 0, function () {
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.execute(this.sender, this.contractAddress, {
                                transfer_from: {
                                    amount: amount,
                                    owner: owner,
                                    recipient: recipient,
                                },
                            }, fee, memo, funds)];
                        case 1: return [2 /*return*/, _b.sent()];
                    }
                });
            });
        };
        _this.sendFrom = function (_a, fee, memo, funds) {
            var amount = _a.amount, contract = _a.contract, msg = _a.msg, owner = _a.owner;
            if (fee === void 0) { fee = 'auto'; }
            return __awaiter(_this, void 0, void 0, function () {
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.execute(this.sender, this.contractAddress, {
                                send_from: {
                                    amount: amount,
                                    contract: contract,
                                    msg: msg,
                                    owner: owner,
                                },
                            }, fee, memo, funds)];
                        case 1: return [2 /*return*/, _b.sent()];
                    }
                });
            });
        };
        _this.burnFrom = function (_a, fee, memo, funds) {
            var amount = _a.amount, owner = _a.owner;
            if (fee === void 0) { fee = 'auto'; }
            return __awaiter(_this, void 0, void 0, function () {
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.execute(this.sender, this.contractAddress, {
                                burn_from: {
                                    amount: amount,
                                    owner: owner,
                                },
                            }, fee, memo, funds)];
                        case 1: return [2 /*return*/, _b.sent()];
                    }
                });
            });
        };
        _this.mint = function (_a, fee, memo, funds) {
            var amount = _a.amount, recipient = _a.recipient;
            if (fee === void 0) { fee = 'auto'; }
            return __awaiter(_this, void 0, void 0, function () {
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.execute(this.sender, this.contractAddress, {
                                mint: {
                                    amount: amount,
                                    recipient: recipient,
                                },
                            }, fee, memo, funds)];
                        case 1: return [2 /*return*/, _b.sent()];
                    }
                });
            });
        };
        _this.updateMinter = function (_a, fee, memo, funds) {
            var newMinter = _a.newMinter;
            if (fee === void 0) { fee = 'auto'; }
            return __awaiter(_this, void 0, void 0, function () {
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.execute(this.sender, this.contractAddress, {
                                update_minter: {
                                    new_minter: newMinter,
                                },
                            }, fee, memo, funds)];
                        case 1: return [2 /*return*/, _b.sent()];
                    }
                });
            });
        };
        _this.updateMarketing = function (_a, fee, memo, funds) {
            var description = _a.description, marketing = _a.marketing, project = _a.project;
            if (fee === void 0) { fee = 'auto'; }
            return __awaiter(_this, void 0, void 0, function () {
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.execute(this.sender, this.contractAddress, {
                                update_marketing: {
                                    description: description,
                                    marketing: marketing,
                                    project: project,
                                },
                            }, fee, memo, funds)];
                        case 1: return [2 /*return*/, _b.sent()];
                    }
                });
            });
        };
        _this.uploadLogo = function (msg, fee, memo, funds) {
            if (fee === void 0) { fee = 'auto'; }
            return __awaiter(_this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.client.execute(this.sender, this.contractAddress, {
                                upload_logo: __assign({}, msg),
                            }, fee, memo, funds)];
                        case 1: return [2 /*return*/, _a.sent()];
                    }
                });
            });
        };
        _this.client = client;
        _this.sender = sender;
        _this.contractAddress = contractAddress;
        _this.transfer = _this.transfer.bind(_this);
        _this.burn = _this.burn.bind(_this);
        _this.send = _this.send.bind(_this);
        _this.increaseAllowance = _this.increaseAllowance.bind(_this);
        _this.decreaseAllowance = _this.decreaseAllowance.bind(_this);
        _this.transferFrom = _this.transferFrom.bind(_this);
        _this.sendFrom = _this.sendFrom.bind(_this);
        _this.burnFrom = _this.burnFrom.bind(_this);
        _this.mint = _this.mint.bind(_this);
        _this.updateMinter = _this.updateMinter.bind(_this);
        _this.updateMarketing = _this.updateMarketing.bind(_this);
        _this.uploadLogo = _this.uploadLogo.bind(_this);
        return _this;
    }
    return Cw20Client;
}(Cw20QueryClient));
export { Cw20Client };
