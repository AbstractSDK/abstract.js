/**
 * This file was automatically generated by @cosmwasm/ts-codegen@0.19.0.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */
import { __awaiter, __extends, __generator } from "tslib";
var FactoryQueryClient = /** @class */ (function () {
    function FactoryQueryClient(client, contractAddress) {
        var _this = this;
        this.config = function () { return __awaiter(_this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                return [2 /*return*/, this.client.queryContractSmart(this.contractAddress, {
                        config: {},
                    })];
            });
        }); };
        this.client = client;
        this.contractAddress = contractAddress;
        this.config = this.config.bind(this);
    }
    return FactoryQueryClient;
}());
export { FactoryQueryClient };
var FactoryClient = /** @class */ (function (_super) {
    __extends(FactoryClient, _super);
    function FactoryClient(client, sender, contractAddress) {
        var _this = _super.call(this, client, contractAddress) || this;
        _this.receive = function (_a, fee, memo, funds) {
            var amount = _a.amount, msg = _a.msg, sender = _a.sender;
            if (fee === void 0) { fee = 'auto'; }
            return __awaiter(_this, void 0, void 0, function () {
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.execute(this.sender, this.contractAddress, {
                                receive: {
                                    amount: amount,
                                    msg: msg,
                                    sender: sender,
                                },
                            }, fee, memo, funds)];
                        case 1: return [2 /*return*/, _b.sent()];
                    }
                });
            });
        };
        _this.updateConfig = function (_a, fee, memo, funds) {
            var admin = _a.admin, ansHostContract = _a.ansHostContract, moduleFactoryAddress = _a.moduleFactoryAddress, subscriptionAddress = _a.subscriptionAddress, versionControlContract = _a.versionControlContract;
            if (fee === void 0) { fee = 'auto'; }
            return __awaiter(_this, void 0, void 0, function () {
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.execute(this.sender, this.contractAddress, {
                                update_config: {
                                    admin: admin,
                                    ans_host_contract: ansHostContract,
                                    module_factory_address: moduleFactoryAddress,
                                    subscription_address: subscriptionAddress,
                                    version_control_contract: versionControlContract,
                                },
                            }, fee, memo, funds)];
                        case 1: return [2 /*return*/, _b.sent()];
                    }
                });
            });
        };
        _this.createOs = function (_a, fee, memo, funds) {
            var description = _a.description, governance = _a.governance, link = _a.link, name = _a.name;
            if (fee === void 0) { fee = 'auto'; }
            return __awaiter(_this, void 0, void 0, function () {
                return __generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.execute(this.sender, this.contractAddress, {
                                create_os: {
                                    description: description,
                                    governance: governance,
                                    link: link,
                                    name: name,
                                },
                            }, fee, memo, funds)];
                        case 1: return [2 /*return*/, _b.sent()];
                    }
                });
            });
        };
        _this.client = client;
        _this.sender = sender;
        _this.contractAddress = contractAddress;
        _this.receive = _this.receive.bind(_this);
        _this.updateConfig = _this.updateConfig.bind(_this);
        _this.createOs = _this.createOs.bind(_this);
        return _this;
    }
    return FactoryClient;
}(FactoryQueryClient));
export { FactoryClient };
