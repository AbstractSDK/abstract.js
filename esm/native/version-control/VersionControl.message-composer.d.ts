/**
 * This file was automatically generated by @cosmwasm/ts-codegen@0.19.0.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */
import { Coin } from '@cosmjs/amino';
import { MsgExecuteContractEncodeObject } from 'cosmwasm';
import { ModuleInfo, Core } from './VersionControl.types';
export interface VersionControlMessage {
    contractAddress: string;
    sender: string;
    removeModule: ({ module, }: {
        module: ModuleInfo;
    }, funds?: Coin[]) => MsgExecuteContractEncodeObject;
    addModules: ({ modules, }: {
        modules: ModuleInfo[][];
    }, funds?: Coin[]) => MsgExecuteContractEncodeObject;
    addOs: ({ core, osId, }: {
        core: Core;
        osId: number;
    }, funds?: Coin[]) => MsgExecuteContractEncodeObject;
    setAdmin: ({ newAdmin, }: {
        newAdmin: string;
    }, funds?: Coin[]) => MsgExecuteContractEncodeObject;
    setFactory: ({ newFactory, }: {
        newFactory: string;
    }, funds?: Coin[]) => MsgExecuteContractEncodeObject;
}
export declare class VersionControlMessageComposer implements VersionControlMessage {
    sender: string;
    contractAddress: string;
    constructor(sender: string, contractAddress: string);
    removeModule: ({ module, }: {
        module: ModuleInfo;
    }, funds?: Coin[]) => MsgExecuteContractEncodeObject;
    addModules: ({ modules, }: {
        modules: ModuleInfo[][];
    }, funds?: Coin[]) => MsgExecuteContractEncodeObject;
    addOs: ({ core, osId, }: {
        core: Core;
        osId: number;
    }, funds?: Coin[]) => MsgExecuteContractEncodeObject;
    setAdmin: ({ newAdmin, }: {
        newAdmin: string;
    }, funds?: Coin[]) => MsgExecuteContractEncodeObject;
    setFactory: ({ newFactory, }: {
        newFactory: string;
    }, funds?: Coin[]) => MsgExecuteContractEncodeObject;
}
