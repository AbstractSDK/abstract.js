/**
 * This file was automatically generated by @cosmwasm/ts-codegen@0.19.0.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */
import { MsgExecuteContract } from 'cosmjs-types/cosmwasm/wasm/v1/tx';
import { toUtf8 } from '@cosmjs/encoding';
var AnsMessageComposer = /** @class */ (function () {
    function AnsMessageComposer(sender, contractAddress) {
        var _this = this;
        this.updateContractAddresses = function (_a, funds) {
            var toAdd = _a.toAdd, toRemove = _a.toRemove;
            return {
                typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',
                value: MsgExecuteContract.fromPartial({
                    sender: _this.sender,
                    contract: _this.contractAddress,
                    msg: toUtf8(JSON.stringify({
                        update_contract_addresses: {
                            to_add: toAdd,
                            to_remove: toRemove,
                        },
                    })),
                    funds: funds,
                }),
            };
        };
        this.updateAssetAddresses = function (_a, funds) {
            var toAdd = _a.toAdd, toRemove = _a.toRemove;
            return {
                typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',
                value: MsgExecuteContract.fromPartial({
                    sender: _this.sender,
                    contract: _this.contractAddress,
                    msg: toUtf8(JSON.stringify({
                        update_asset_addresses: {
                            to_add: toAdd,
                            to_remove: toRemove,
                        },
                    })),
                    funds: funds,
                }),
            };
        };
        this.updateChannels = function (_a, funds) {
            var toAdd = _a.toAdd, toRemove = _a.toRemove;
            return {
                typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',
                value: MsgExecuteContract.fromPartial({
                    sender: _this.sender,
                    contract: _this.contractAddress,
                    msg: toUtf8(JSON.stringify({
                        update_channels: {
                            to_add: toAdd,
                            to_remove: toRemove,
                        },
                    })),
                    funds: funds,
                }),
            };
        };
        this.updateDexes = function (_a, funds) {
            var toAdd = _a.toAdd, toRemove = _a.toRemove;
            return {
                typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',
                value: MsgExecuteContract.fromPartial({
                    sender: _this.sender,
                    contract: _this.contractAddress,
                    msg: toUtf8(JSON.stringify({
                        update_dexes: {
                            to_add: toAdd,
                            to_remove: toRemove,
                        },
                    })),
                    funds: funds,
                }),
            };
        };
        this.updatePools = function (_a, funds) {
            var toAdd = _a.toAdd, toRemove = _a.toRemove;
            return {
                typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',
                value: MsgExecuteContract.fromPartial({
                    sender: _this.sender,
                    contract: _this.contractAddress,
                    msg: toUtf8(JSON.stringify({
                        update_pools: {
                            to_add: toAdd,
                            to_remove: toRemove,
                        },
                    })),
                    funds: funds,
                }),
            };
        };
        this.setAdmin = function (_a, funds) {
            var admin = _a.admin;
            return {
                typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',
                value: MsgExecuteContract.fromPartial({
                    sender: _this.sender,
                    contract: _this.contractAddress,
                    msg: toUtf8(JSON.stringify({
                        set_admin: {
                            admin: admin,
                        },
                    })),
                    funds: funds,
                }),
            };
        };
        this.sender = sender;
        this.contractAddress = contractAddress;
        this.updateContractAddresses = this.updateContractAddresses.bind(this);
        this.updateAssetAddresses = this.updateAssetAddresses.bind(this);
        this.updateChannels = this.updateChannels.bind(this);
        this.updateDexes = this.updateDexes.bind(this);
        this.updatePools = this.updatePools.bind(this);
        this.setAdmin = this.setAdmin.bind(this);
    }
    return AnsMessageComposer;
}());
export { AnsMessageComposer };
