/**
* This file was automatically generated by cosmwasm-typescript-gen@0.2.14.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the cosmwasm-typescript-gen generate command to regenerate this file.
*/

import { useQuery, UseQueryOptions } from "react-query";
import { ConfigResponse, InstantiateMsg, ModuleInfo, Uint64, QueryCodeIdResponse, ContractVersion, QueryEnabledModulesResponse, Addr, QueryOsAddressResponse, Core } from "./VersionControlContract";
import { VersionControlQueryClient } from "./VersionControlContract";
export interface VersionControlConfigQuery {
  client: VersionControlQueryClient;
  options?: UseQueryOptions<ConfigResponse, Error, ConfigResponse, (string | undefined)[]>;
}
export function useVersionControlConfigQuery({
  client,
  options
}: VersionControlConfigQuery) {
  return useQuery<ConfigResponse, Error, ConfigResponse, (string | undefined)[]>(["versionControlConfig", client.contractAddress], () => client.config(), options);
}
export interface VersionControlQueryCodeIdQuery {
  client: VersionControlQueryClient;
  options?: UseQueryOptions<QueryCodeIdResponse, Error, QueryCodeIdResponse, (string | undefined)[]>;
  args: {
    module: ModuleInfo;
  };
}
export function useVersionControlQueryCodeIdQuery({
  client,
  args,
  options
}: VersionControlQueryCodeIdQuery) {
  return useQuery<QueryCodeIdResponse, Error, QueryCodeIdResponse, (string | undefined)[]>(["versionControlQueryCodeId", client.contractAddress], () => client.queryCodeId({
    module: args.module
  }), options);
}
export interface VersionControlQueryOsAddressQuery {
  client: VersionControlQueryClient;
  options?: UseQueryOptions<QueryOsAddressResponse, Error, QueryOsAddressResponse, (string | undefined)[]>;
  args: {
    osId: number;
  };
}
export function useVersionControlQueryOsAddressQuery({
  client,
  args,
  options
}: VersionControlQueryOsAddressQuery) {
  return useQuery<QueryOsAddressResponse, Error, QueryOsAddressResponse, (string | undefined)[]>(["versionControlQueryOsAddress", client.contractAddress], () => client.queryOsAddress({
    osId: args.osId
  }), options);
}
export interface VersionControlQueryEnabledModulesQuery {
  client: VersionControlQueryClient;
  options?: UseQueryOptions<QueryEnabledModulesResponse, Error, QueryEnabledModulesResponse, (string | undefined)[]>;
  args: {
    osAddress: string;
  };
}
export function useVersionControlQueryEnabledModulesQuery({
  client,
  args,
  options
}: VersionControlQueryEnabledModulesQuery) {
  return useQuery<QueryEnabledModulesResponse, Error, QueryEnabledModulesResponse, (string | undefined)[]>(["versionControlQueryEnabledModules", client.contractAddress], () => client.queryEnabledModules({
    osAddress: args.osAddress
  }), options);
}