/**
 * This file was automatically generated by @cosmwasm/ts-codegen@0.16.5.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */

export interface InstantiateMsg {
  memory_address: string
  os_id: number
}
export type ExecuteMsg =
  | {
      set_admin: {
        admin: string
      }
    }
  | {
      module_action: {
        msgs: CosmosMsgForEmpty[]
      }
    }
  | {
      add_module: {
        module: string
      }
    }
  | {
      remove_module: {
        module: string
      }
    }
  | {
      update_assets: {
        to_add: UncheckedProxyAsset[]
        to_remove: string[]
      }
    }
export type CosmosMsgForEmpty =
  | {
      bank: BankMsg
    }
  | {
      custom: Empty
    }
  | {
      staking: StakingMsg
    }
  | {
      distribution: DistributionMsg
    }
  | {
      wasm: WasmMsg
    }
export type BankMsg =
  | {
      send: {
        amount: Coin[]
        to_address: string
      }
    }
  | {
      burn: {
        amount: Coin[]
      }
    }
export type Uint128 = string
export type StakingMsg =
  | {
      delegate: {
        amount: Coin
        validator: string
      }
    }
  | {
      undelegate: {
        amount: Coin
        validator: string
      }
    }
  | {
      redelegate: {
        amount: Coin
        dst_validator: string
        src_validator: string
      }
    }
export type DistributionMsg =
  | {
      set_withdraw_address: {
        address: string
      }
    }
  | {
      withdraw_delegator_reward: {
        validator: string
      }
    }
export type WasmMsg =
  | {
      execute: {
        contract_addr: string
        funds: Coin[]
        msg: Binary
      }
    }
  | {
      instantiate: {
        admin?: string | null
        code_id: number
        funds: Coin[]
        label: string
        msg: Binary
      }
    }
  | {
      migrate: {
        contract_addr: string
        msg: Binary
        new_code_id: number
      }
    }
  | {
      update_admin: {
        admin: string
        contract_addr: string
      }
    }
  | {
      clear_admin: {
        contract_addr: string
      }
    }
export type Binary = string
export type UncheckedValueRef =
  | {
      Pool: {
        exchange: string
        pair: string
      }
    }
  | {
      LiquidityToken: {}
    }
  | {
      ValueAs: {
        asset: string
        multiplier: Decimal
      }
    }
  | {
      External: {
        api_name: string
      }
    }
export type Decimal = string
export interface Coin {
  amount: Uint128
  denom: string
}
export interface Empty {}
export interface UncheckedProxyAsset {
  asset: string
  value_reference?: UncheckedValueRef | null
}
export type QueryMsg =
  | {
      config: {}
    }
  | {
      total_value: {}
    }
  | {
      holding_value: {
        identifier: string
      }
    }
  | {
      holding_amount: {
        identifier: string
      }
    }
  | {
      asset_config: {
        identifier: string
      }
    }
  | {
      assets: {
        page_size?: number | null
        page_token?: string | null
      }
    }
  | {
      check_validity: {}
    }
  | {
      base_asset: {}
    }
export interface MigrateMsg {}
export type AssetEntry = string
export type ValueRef =
  | {
      Pool: {
        pair: ContractEntry
      }
    }
  | {
      LiquidityToken: {}
    }
  | {
      ValueAs: {
        asset: AssetEntry
        multiplier: Decimal
      }
    }
  | {
      External: {
        api_name: string
      }
    }
export interface AssetConfigResponse {
  proxy_asset: ProxyAsset
}
export interface ProxyAsset {
  asset: AssetEntry
  value_reference?: ValueRef | null
}
export interface ContractEntry {
  contract: string
  protocol: string
}
export interface AssetsResponse {
  assets: [AssetEntry, ProxyAsset][]
}
export interface BaseAssetResponse {
  base_asset: ProxyAsset
}
export interface ValidityResponse {
  missing_dependencies?: AssetEntry[] | null
  unresolvable_assets?: AssetEntry[] | null
}
export interface ConfigResponse {
  modules: string[]
}
export interface HoldingAmountResponse {
  amount: Uint128
}
export interface HoldingValueResponse {
  value: Uint128
}
export interface TotalValueResponse {
  value: Uint128
}
