/**
* This file was automatically generated by cosmwasm-typescript-gen@0.3.9.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the cosmwasm-typescript-gen generate command to regenerate this file.
*/

import { useQuery, UseQueryOptions } from "react-query";
import { Binary, ExecuteMsg, ModuleKind, Module, ModuleInfo, InstantiateMsg, QueryEnabledModulesResponse, QueryModulesResponse, QueryMsg, Uint64, QueryOsConfigResponse, QueryVersionsResponse, ContractVersion } from "../contracts/ManagerContract";
import { ManagerQueryClient } from "../contracts/ManagerContract";
export interface ManagerQueryOsConfigQuery {
  client?: ManagerQueryClient;
  options?: UseQueryOptions<QueryOsConfigResponse | undefined, Error, QueryOsConfigResponse, (string | undefined)[]>;
}
export function useManagerQueryOsConfigQuery({
  client,
  options
}: ManagerQueryOsConfigQuery) {
  return useQuery<QueryOsConfigResponse | undefined, Error, QueryOsConfigResponse, (string | undefined)[]>(["managerQueryOsConfig", client?.contractAddress], () => client ? client.queryOsConfig() : undefined, {
    enabled: !!client,
    ...options
  });
}
export interface ManagerQueryEnabledModulesQuery {
  client?: ManagerQueryClient;
  options?: UseQueryOptions<QueryEnabledModulesResponse | undefined, Error, QueryEnabledModulesResponse, (string | undefined)[]>;
}
export function useManagerQueryEnabledModulesQuery({
  client,
  options
}: ManagerQueryEnabledModulesQuery) {
  return useQuery<QueryEnabledModulesResponse | undefined, Error, QueryEnabledModulesResponse, (string | undefined)[]>(["managerQueryEnabledModules", client?.contractAddress], () => client ? client.queryEnabledModules() : undefined, {
    enabled: !!client,
    ...options
  });
}
export interface ManagerQueryModulesQuery {
  client?: ManagerQueryClient;
  options?: UseQueryOptions<QueryModulesResponse | undefined, Error, QueryModulesResponse, (string | undefined)[]>;
  args: {
    names: string[];
  };
}
export function useManagerQueryModulesQuery({
  client,
  args,
  options
}: ManagerQueryModulesQuery) {
  return useQuery<QueryModulesResponse | undefined, Error, QueryModulesResponse, (string | undefined)[]>(["managerQueryModules", client?.contractAddress], () => client ? client.queryModules({
    names: args.names
  }) : undefined, {
    enabled: !!client,
    ...options
  });
}
export interface ManagerQueryVersionsQuery {
  client?: ManagerQueryClient;
  options?: UseQueryOptions<QueryVersionsResponse | undefined, Error, QueryVersionsResponse, (string | undefined)[]>;
  args: {
    names: string[];
  };
}
export function useManagerQueryVersionsQuery({
  client,
  args,
  options
}: ManagerQueryVersionsQuery) {
  return useQuery<QueryVersionsResponse | undefined, Error, QueryVersionsResponse, (string | undefined)[]>(["managerQueryVersions", client?.contractAddress], () => client ? client.queryVersions({
    names: args.names
  }) : undefined, {
    enabled: !!client,
    ...options
  });
}
