/**
* This file was automatically generated by cosmwasm-typescript-gen@0.2.15.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the cosmwasm-typescript-gen generate command to regenerate this file.
*/

import { useQuery, UseQueryOptions } from "react-query";
import { Binary, InstantiateMsg, ManagerModuleInfo, ContractVersion, ModuleKind, Module, ModuleInfo, OsInfo, Uint64, QueryConfigResponse, QueryInfoResponse, QueryModuleAddressesResponse, QueryModuleInfosResponse, QueryModuleVersionsResponse } from "../contracts/ManagerContract";
import { ManagerQueryClient } from "../contracts/ManagerContract";
export interface ManagerQueryInfoQuery {
  client: ManagerQueryClient;
  options?: UseQueryOptions<QueryInfoResponse, Error, QueryInfoResponse, (string | undefined)[]>;
}
export function useManagerQueryInfoQuery({
  client,
  options
}: ManagerQueryInfoQuery) {
  return useQuery<QueryInfoResponse, Error, QueryInfoResponse, (string | undefined)[]>(["managerQueryInfo", client.contractAddress], () => client.queryInfo(), options);
}
export interface ManagerQueryConfigQuery {
  client: ManagerQueryClient;
  options?: UseQueryOptions<QueryConfigResponse, Error, QueryConfigResponse, (string | undefined)[]>;
}
export function useManagerQueryConfigQuery({
  client,
  options
}: ManagerQueryConfigQuery) {
  return useQuery<QueryConfigResponse, Error, QueryConfigResponse, (string | undefined)[]>(["managerQueryConfig", client.contractAddress], () => client.queryConfig(), options);
}
export interface ManagerQueryModuleInfosQuery {
  client: ManagerQueryClient;
  options?: UseQueryOptions<QueryModuleInfosResponse, Error, QueryModuleInfosResponse, (string | undefined)[]>;
  args: {
    iterLimit?: number;
    lastModuleName?: string;
  };
}
export function useManagerQueryModuleInfosQuery({
  client,
  args,
  options
}: ManagerQueryModuleInfosQuery) {
  return useQuery<QueryModuleInfosResponse, Error, QueryModuleInfosResponse, (string | undefined)[]>(["managerQueryModuleInfos", client.contractAddress], () => client.queryModuleInfos({
    iterLimit: args.iterLimit,
    lastModuleName: args.lastModuleName
  }), options);
}
export interface ManagerQueryModuleAddressesQuery {
  client: ManagerQueryClient;
  options?: UseQueryOptions<QueryModuleAddressesResponse, Error, QueryModuleAddressesResponse, (string | undefined)[]>;
  args: {
    names: string[];
  };
}
export function useManagerQueryModuleAddressesQuery({
  client,
  args,
  options
}: ManagerQueryModuleAddressesQuery) {
  return useQuery<QueryModuleAddressesResponse, Error, QueryModuleAddressesResponse, (string | undefined)[]>(["managerQueryModuleAddresses", client.contractAddress], () => client.queryModuleAddresses({
    names: args.names
  }), options);
}
export interface ManagerQueryModuleVersionsQuery {
  client: ManagerQueryClient;
  options?: UseQueryOptions<QueryModuleVersionsResponse, Error, QueryModuleVersionsResponse, (string | undefined)[]>;
  args: {
    names: string[];
  };
}
export function useManagerQueryModuleVersionsQuery({
  client,
  args,
  options
}: ManagerQueryModuleVersionsQuery) {
  return useQuery<QueryModuleVersionsResponse, Error, QueryModuleVersionsResponse, (string | undefined)[]>(["managerQueryModuleVersions", client.contractAddress], () => client.queryModuleVersions({
    names: args.names
  }), options);
}
