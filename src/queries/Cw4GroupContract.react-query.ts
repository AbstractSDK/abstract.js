/**
* This file was automatically generated by cosmwasm-typescript-gen@0.2.15.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the cosmwasm-typescript-gen generate command to regenerate this file.
*/

import { useQuery, UseQueryOptions } from "react-query";
import { AdminResponse, HooksResponse, InstantiateMsg, Member, ListMembersResponse, MemberListResponse, MemberResponse, TotalWeightResponse } from "../contracts/Cw4GroupContract";
import { Cw4GroupQueryClient } from "../contracts/Cw4GroupContract";
export interface Cw4GroupHooksQuery {
  client: Cw4GroupQueryClient;
  options?: UseQueryOptions<HooksResponse, Error, HooksResponse, (string | undefined)[]>;
}
export function useCw4GroupHooksQuery({
  client,
  options
}: Cw4GroupHooksQuery) {
  return useQuery<HooksResponse, Error, HooksResponse, (string | undefined)[]>(["cw4GroupHooks", client.contractAddress], () => client.hooks(), options);
}
export interface Cw4GroupMemberQuery {
  client: Cw4GroupQueryClient;
  options?: UseQueryOptions<MemberResponse, Error, MemberResponse, (string | undefined)[]>;
  args: {
    addr: string;
    atHeight?: number;
  };
}
export function useCw4GroupMemberQuery({
  client,
  args,
  options
}: Cw4GroupMemberQuery) {
  return useQuery<MemberResponse, Error, MemberResponse, (string | undefined)[]>(["cw4GroupMember", client.contractAddress], () => client.member({
    addr: args.addr,
    atHeight: args.atHeight
  }), options);
}
export interface Cw4GroupListMembersQuery {
  client: Cw4GroupQueryClient;
  options?: UseQueryOptions<ListMembersResponse, Error, ListMembersResponse, (string | undefined)[]>;
  args: {
    limit?: number;
    startAfter?: string;
  };
}
export function useCw4GroupListMembersQuery({
  client,
  args,
  options
}: Cw4GroupListMembersQuery) {
  return useQuery<ListMembersResponse, Error, ListMembersResponse, (string | undefined)[]>(["cw4GroupListMembers", client.contractAddress], () => client.listMembers({
    limit: args.limit,
    startAfter: args.startAfter
  }), options);
}
export interface Cw4GroupTotalWeightQuery {
  client: Cw4GroupQueryClient;
  options?: UseQueryOptions<TotalWeightResponse, Error, TotalWeightResponse, (string | undefined)[]>;
}
export function useCw4GroupTotalWeightQuery({
  client,
  options
}: Cw4GroupTotalWeightQuery) {
  return useQuery<TotalWeightResponse, Error, TotalWeightResponse, (string | undefined)[]>(["cw4GroupTotalWeight", client.contractAddress], () => client.totalWeight(), options);
}
export interface Cw4GroupAdminQuery {
  client: Cw4GroupQueryClient;
  options?: UseQueryOptions<AdminResponse, Error, AdminResponse, (string | undefined)[]>;
}
export function useCw4GroupAdminQuery({
  client,
  options
}: Cw4GroupAdminQuery) {
  return useQuery<AdminResponse, Error, AdminResponse, (string | undefined)[]>(["cw4GroupAdmin", client.contractAddress], () => client.admin(), options);
}
