"use strict";
/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.14.0.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProxyClient = exports.ProxyQueryClient = void 0;
class ProxyQueryClient {
    constructor(client, contractAddress) {
        Object.defineProperty(this, "client", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "contractAddress", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "config", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: () => __awaiter(this, void 0, void 0, function* () {
                return this.client.queryContractSmart(this.contractAddress, {
                    config: {}
                });
            })
        });
        Object.defineProperty(this, "totalValue", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: () => __awaiter(this, void 0, void 0, function* () {
                return this.client.queryContractSmart(this.contractAddress, {
                    total_value: {}
                });
            })
        });
        Object.defineProperty(this, "holdingValue", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ identifier }) => __awaiter(this, void 0, void 0, function* () {
                return this.client.queryContractSmart(this.contractAddress, {
                    holding_value: {
                        identifier
                    }
                });
            })
        });
        Object.defineProperty(this, "holdingAmount", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ identifier }) => __awaiter(this, void 0, void 0, function* () {
                return this.client.queryContractSmart(this.contractAddress, {
                    holding_amount: {
                        identifier
                    }
                });
            })
        });
        Object.defineProperty(this, "assetConfig", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ identifier }) => __awaiter(this, void 0, void 0, function* () {
                return this.client.queryContractSmart(this.contractAddress, {
                    asset_config: {
                        identifier
                    }
                });
            })
        });
        Object.defineProperty(this, "assets", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ pageSize, pageToken }) => __awaiter(this, void 0, void 0, function* () {
                return this.client.queryContractSmart(this.contractAddress, {
                    assets: {
                        page_size: pageSize,
                        page_token: pageToken
                    }
                });
            })
        });
        Object.defineProperty(this, "checkValidity", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: () => __awaiter(this, void 0, void 0, function* () {
                return this.client.queryContractSmart(this.contractAddress, {
                    check_validity: {}
                });
            })
        });
        Object.defineProperty(this, "baseAsset", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: () => __awaiter(this, void 0, void 0, function* () {
                return this.client.queryContractSmart(this.contractAddress, {
                    base_asset: {}
                });
            })
        });
        this.client = client;
        this.contractAddress = contractAddress;
        this.config = this.config.bind(this);
        this.totalValue = this.totalValue.bind(this);
        this.holdingValue = this.holdingValue.bind(this);
        this.holdingAmount = this.holdingAmount.bind(this);
        this.assetConfig = this.assetConfig.bind(this);
        this.assets = this.assets.bind(this);
        this.checkValidity = this.checkValidity.bind(this);
        this.baseAsset = this.baseAsset.bind(this);
    }
}
exports.ProxyQueryClient = ProxyQueryClient;
class ProxyClient extends ProxyQueryClient {
    constructor(client, sender, contractAddress) {
        super(client, contractAddress);
        Object.defineProperty(this, "client", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "sender", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "contractAddress", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "setAdmin", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ admin }, fee = "auto", memo, funds) => __awaiter(this, void 0, void 0, function* () {
                return yield this.client.execute(this.sender, this.contractAddress, {
                    set_admin: {
                        admin
                    }
                }, fee, memo, funds);
            })
        });
        Object.defineProperty(this, "moduleAction", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ msgs }, fee = "auto", memo, funds) => __awaiter(this, void 0, void 0, function* () {
                return yield this.client.execute(this.sender, this.contractAddress, {
                    module_action: {
                        msgs
                    }
                }, fee, memo, funds);
            })
        });
        Object.defineProperty(this, "addModule", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ module }, fee = "auto", memo, funds) => __awaiter(this, void 0, void 0, function* () {
                return yield this.client.execute(this.sender, this.contractAddress, {
                    add_module: {
                        module
                    }
                }, fee, memo, funds);
            })
        });
        Object.defineProperty(this, "removeModule", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ module }, fee = "auto", memo, funds) => __awaiter(this, void 0, void 0, function* () {
                return yield this.client.execute(this.sender, this.contractAddress, {
                    remove_module: {
                        module
                    }
                }, fee, memo, funds);
            })
        });
        Object.defineProperty(this, "updateAssets", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ toAdd, toRemove }, fee = "auto", memo, funds) => __awaiter(this, void 0, void 0, function* () {
                return yield this.client.execute(this.sender, this.contractAddress, {
                    update_assets: {
                        to_add: toAdd,
                        to_remove: toRemove
                    }
                }, fee, memo, funds);
            })
        });
        this.client = client;
        this.sender = sender;
        this.contractAddress = contractAddress;
        this.setAdmin = this.setAdmin.bind(this);
        this.moduleAction = this.moduleAction.bind(this);
        this.addModule = this.addModule.bind(this);
        this.removeModule = this.removeModule.bind(this);
        this.updateAssets = this.updateAssets.bind(this);
    }
}
exports.ProxyClient = ProxyClient;
//# sourceMappingURL=Proxy.client.js.map