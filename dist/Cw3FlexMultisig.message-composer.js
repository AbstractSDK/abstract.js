"use strict";
/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.11.1.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.Cw3FlexMultisigMessageComposer = void 0;
const tx_1 = require("cosmjs-types/cosmwasm/wasm/v1/tx");
const encoding_1 = require("@cosmjs/encoding");
class Cw3FlexMultisigMessageComposer {
    constructor(sender, contractAddress) {
        Object.defineProperty(this, "sender", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "contractAddress", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "propose", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ description, latest, msgs, title }, funds) => {
                return {
                    typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
                    value: tx_1.MsgExecuteContract.fromPartial({
                        sender: this.sender,
                        contract: this.contractAddress,
                        msg: (0, encoding_1.toUtf8)(JSON.stringify({
                            propose: {
                                description,
                                latest,
                                msgs,
                                title
                            }
                        })),
                        funds
                    })
                };
            }
        });
        Object.defineProperty(this, "vote", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ proposalId, vote }, funds) => {
                return {
                    typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
                    value: tx_1.MsgExecuteContract.fromPartial({
                        sender: this.sender,
                        contract: this.contractAddress,
                        msg: (0, encoding_1.toUtf8)(JSON.stringify({
                            vote: {
                                proposal_id: proposalId,
                                vote
                            }
                        })),
                        funds
                    })
                };
            }
        });
        Object.defineProperty(this, "execute", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ proposalId }, funds) => {
                return {
                    typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
                    value: tx_1.MsgExecuteContract.fromPartial({
                        sender: this.sender,
                        contract: this.contractAddress,
                        msg: (0, encoding_1.toUtf8)(JSON.stringify({
                            execute: {
                                proposal_id: proposalId
                            }
                        })),
                        funds
                    })
                };
            }
        });
        Object.defineProperty(this, "close", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ proposalId }, funds) => {
                return {
                    typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
                    value: tx_1.MsgExecuteContract.fromPartial({
                        sender: this.sender,
                        contract: this.contractAddress,
                        msg: (0, encoding_1.toUtf8)(JSON.stringify({
                            close: {
                                proposal_id: proposalId
                            }
                        })),
                        funds
                    })
                };
            }
        });
        Object.defineProperty(this, "memberChangedHook", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ diffs }, funds) => {
                return {
                    typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
                    value: tx_1.MsgExecuteContract.fromPartial({
                        sender: this.sender,
                        contract: this.contractAddress,
                        msg: (0, encoding_1.toUtf8)(JSON.stringify({
                            member_changed_hook: {
                                diffs
                            }
                        })),
                        funds
                    })
                };
            }
        });
        this.sender = sender;
        this.contractAddress = contractAddress;
        this.propose = this.propose.bind(this);
        this.vote = this.vote.bind(this);
        this.execute = this.execute.bind(this);
        this.close = this.close.bind(this);
        this.memberChangedHook = this.memberChangedHook.bind(this);
    }
}
exports.Cw3FlexMultisigMessageComposer = Cw3FlexMultisigMessageComposer;
//# sourceMappingURL=Cw3FlexMultisig.message-composer.js.map