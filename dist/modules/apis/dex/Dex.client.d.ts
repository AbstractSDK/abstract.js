/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.14.0.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/
import { CosmWasmClient, SigningCosmWasmClient, ExecuteResult } from "@cosmjs/cosmwasm-stargate";
import { Coin, StdFee } from "@cosmjs/amino";
import { ApiResponse, BaseExecuteMsg, Empty } from "./Dex.types";
export interface DexReadOnlyInterface {
    contractAddress: string;
    api: () => Promise<ApiResponse>;
}
export declare class DexQueryClient implements DexReadOnlyInterface {
    client: CosmWasmClient;
    contractAddress: string;
    constructor(client: CosmWasmClient, contractAddress: string);
    api: () => Promise<ApiResponse>;
}
export interface DexInterface extends DexReadOnlyInterface {
    contractAddress: string;
    sender: string;
    request: ({ proxyAddress, request }: {
        proxyAddress?: string;
        request: Empty;
    }, fee?: number | StdFee | "auto", memo?: string, funds?: Coin[]) => Promise<ExecuteResult>;
    configure: (msg: BaseExecuteMsg, fee?: number | StdFee | "auto", memo?: string, funds?: Coin[]) => Promise<ExecuteResult>;
}
export declare class DexClient extends DexQueryClient implements DexInterface {
    client: SigningCosmWasmClient;
    sender: string;
    contractAddress: string;
    constructor(client: SigningCosmWasmClient, sender: string, contractAddress: string);
    request: ({ proxyAddress, request }: {
        proxyAddress?: string | undefined;
        request: Empty;
    }, fee?: number | StdFee | "auto", memo?: string, funds?: Coin[]) => Promise<ExecuteResult>;
    configure: (msg: BaseExecuteMsg, fee?: number | StdFee | "auto", memo?: string, funds?: Coin[]) => Promise<ExecuteResult>;
}
