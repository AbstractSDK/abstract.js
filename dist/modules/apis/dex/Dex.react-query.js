"use strict";
/**
 * This file was automatically generated by @cosmwasm/ts-codegen@0.14.0.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.useDexRequestMutation = exports.useDexConfigureMutation = exports.useDexApiQuery = exports.dexQueryKeys = void 0;
const react_query_1 = require("@tanstack/react-query");
exports.dexQueryKeys = {
    contract: [
        {
            contract: 'dex',
        },
    ],
    address: (contractAddress) => [Object.assign(Object.assign({}, exports.dexQueryKeys.contract[0]), { address: contractAddress })],
    api: (contractAddress, args) => [Object.assign(Object.assign({}, exports.dexQueryKeys.address(contractAddress)[0]), { method: 'api', args })],
    base: (contractAddress, args) => [Object.assign(Object.assign({}, exports.dexQueryKeys.address(contractAddress)[0]), { method: 'base', args })],
};
function useDexApiQuery({ client, options }) {
    return (0, react_query_1.useQuery)(exports.dexQueryKeys.api(client === null || client === void 0 ? void 0 : client.contractAddress), () => (client ? client.api() : Promise.reject(new Error('Invalid client'))), Object.assign(Object.assign({}, options), { enabled: !!client && ((options === null || options === void 0 ? void 0 : options.enabled) != undefined ? options.enabled : true) }));
}
exports.useDexApiQuery = useDexApiQuery;
function useDexConfigureMutation(options) {
    return (0, react_query_1.useMutation)(({ client, msg, args: { fee, memo, funds } = {} }) => client.configure(msg, fee, memo, funds), options);
}
exports.useDexConfigureMutation = useDexConfigureMutation;
function useDexRequestMutation(options) {
    return (0, react_query_1.useMutation)(({ client, msg, args: { fee, memo, funds } = {} }) => client.request(msg, fee, memo, funds), options);
}
exports.useDexRequestMutation = useDexRequestMutation;
//# sourceMappingURL=Dex.react-query.js.map