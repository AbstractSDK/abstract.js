/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.21.1.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/
import { Coin } from "@cosmjs/amino";
import { MsgExecuteContractEncodeObject } from "cosmwasm";
import { RequestMsg, StdAck } from "./Staking.types";
export interface StakingMessage {
    contractAddress: string;
    sender: string;
    base: (funds?: Coin[]) => MsgExecuteContractEncodeObject;
    app: ({ proxyAddress, request }: {
        proxyAddress?: string;
        request: RequestMsg;
    }, funds?: Coin[]) => MsgExecuteContractEncodeObject;
    ibcCallback: ({ id, msg }: {
        id: string;
        msg: StdAck;
    }, funds?: Coin[]) => MsgExecuteContractEncodeObject;
    receive: (funds?: Coin[]) => MsgExecuteContractEncodeObject;
}
export declare class StakingMessageComposer implements StakingMessage {
    sender: string;
    contractAddress: string;
    constructor(sender: string, contractAddress: string);
    base: (funds?: Coin[]) => MsgExecuteContractEncodeObject;
    app: ({ proxyAddress, request }: {
        proxyAddress?: string | undefined;
        request: RequestMsg;
    }, funds?: Coin[]) => MsgExecuteContractEncodeObject;
    ibcCallback: ({ id, msg }: {
        id: string;
        msg: StdAck;
    }, funds?: Coin[]) => MsgExecuteContractEncodeObject;
    receive: (funds?: Coin[]) => MsgExecuteContractEncodeObject;
}
