"use strict";
/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.14.0.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.EtfMessageComposer = void 0;
const tx_1 = require("cosmjs-types/cosmwasm/wasm/v1/tx");
const encoding_1 = require("@cosmjs/encoding");
class EtfMessageComposer {
    constructor(sender, contractAddress) {
        Object.defineProperty(this, "sender", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "contractAddress", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "base", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: (funds) => {
                return {
                    typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
                    value: tx_1.MsgExecuteContract.fromPartial({
                        sender: this.sender,
                        contract: this.contractAddress,
                        msg: (0, encoding_1.toUtf8)(JSON.stringify({
                            base: {}
                        })),
                        funds
                    })
                };
            }
        });
        Object.defineProperty(this, "receive", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ amount, msg, sender }, funds) => {
                return {
                    typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
                    value: tx_1.MsgExecuteContract.fromPartial({
                        sender: this.sender,
                        contract: this.contractAddress,
                        msg: (0, encoding_1.toUtf8)(JSON.stringify({
                            receive: {
                                amount,
                                msg,
                                sender
                            }
                        })),
                        funds
                    })
                };
            }
        });
        Object.defineProperty(this, "provideLiquidity", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ asset }, funds) => {
                return {
                    typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
                    value: tx_1.MsgExecuteContract.fromPartial({
                        sender: this.sender,
                        contract: this.contractAddress,
                        msg: (0, encoding_1.toUtf8)(JSON.stringify({
                            provide_liquidity: {
                                asset
                            }
                        })),
                        funds
                    })
                };
            }
        });
        Object.defineProperty(this, "updatePool", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ assetsToAdd, assetsToRemove, depositAsset }, funds) => {
                return {
                    typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
                    value: tx_1.MsgExecuteContract.fromPartial({
                        sender: this.sender,
                        contract: this.contractAddress,
                        msg: (0, encoding_1.toUtf8)(JSON.stringify({
                            update_pool: {
                                assets_to_add: assetsToAdd,
                                assets_to_remove: assetsToRemove,
                                deposit_asset: depositAsset
                            }
                        })),
                        funds
                    })
                };
            }
        });
        Object.defineProperty(this, "import", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: (funds) => {
                return {
                    typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
                    value: tx_1.MsgExecuteContract.fromPartial({
                        sender: this.sender,
                        contract: this.contractAddress,
                        msg: (0, encoding_1.toUtf8)(JSON.stringify({
                            import: {}
                        })),
                        funds
                    })
                };
            }
        });
        Object.defineProperty(this, "setFee", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ fee }, funds) => {
                return {
                    typeUrl: "/cosmwasm.wasm.v1.MsgExecuteContract",
                    value: tx_1.MsgExecuteContract.fromPartial({
                        sender: this.sender,
                        contract: this.contractAddress,
                        msg: (0, encoding_1.toUtf8)(JSON.stringify({
                            set_fee: {
                                fee
                            }
                        })),
                        funds
                    })
                };
            }
        });
        this.sender = sender;
        this.contractAddress = contractAddress;
        this.base = this.base.bind(this);
        this.receive = this.receive.bind(this);
        this.provideLiquidity = this.provideLiquidity.bind(this);
        this.updatePool = this.updatePool.bind(this);
        this.import = this.import.bind(this);
        this.setFee = this.setFee.bind(this);
    }
}
exports.EtfMessageComposer = EtfMessageComposer;
//# sourceMappingURL=Etf.message-composer.js.map