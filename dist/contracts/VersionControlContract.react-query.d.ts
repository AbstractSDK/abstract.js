/**
* This file was automatically generated by cosmwasm-typescript-gen@0.2.14.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the cosmwasm-typescript-gen generate command to regenerate this file.
*/
import { UseQueryOptions } from "react-query";
import { ConfigResponse, ModuleInfo, QueryCodeIdResponse, QueryEnabledModulesResponse, QueryOsAddressResponse } from "./VersionControlContract";
import { VersionControlQueryClient } from "./VersionControlContract";
export interface VersionControlConfigQuery {
    client: VersionControlQueryClient;
    options?: Omit<UseQueryOptions<ConfigResponse, Error, ConfigResponse, (string | undefined)[]>, 'queryKey' | 'queryFn' | 'initialData'> & { initialData?: () => undefined }
}
export declare function useVersionControlConfigQuery({ client, options }: VersionControlConfigQuery): import("react-query").UseQueryResult<ConfigResponse, Error>;
export interface VersionControlQueryCodeIdQuery {
    client: VersionControlQueryClient;
    options?: Omit<UseQueryOptions<QueryCodeIdResponse, Error, QueryCodeIdResponse, (string | undefined)[]>, 'queryKey' | 'queryFn' | 'initialData'> & { initialData?: () => undefined }
    args: {
        module: ModuleInfo;
    };
}
export declare function useVersionControlQueryCodeIdQuery({ client, args, options }: VersionControlQueryCodeIdQuery): import("react-query").UseQueryResult<QueryCodeIdResponse, Error>;
export interface VersionControlQueryOsAddressQuery {
    client: VersionControlQueryClient;
    options?: Omit<UseQueryOptions<QueryOsAddressResponse, Error, QueryOsAddressResponse, (string | undefined)[]>, 'queryKey' | 'queryFn' | 'initialData'> & { initialData?: () => undefined }
    args: {
        osId: number;
    };
}
export declare function useVersionControlQueryOsAddressQuery({ client, args, options }: VersionControlQueryOsAddressQuery): import("react-query").UseQueryResult<QueryOsAddressResponse, Error>;
export interface VersionControlQueryEnabledModulesQuery {
    client: VersionControlQueryClient;
    options?: Omit<UseQueryOptions<QueryEnabledModulesResponse, Error, QueryEnabledModulesResponse, (string | undefined)[]>, 'queryKey' | 'queryFn' | 'initialData'> & { initialData?: () => undefined }
    args: {
        osAddress: string;
    };
}
export declare function useVersionControlQueryEnabledModulesQuery({ client, args, options }: VersionControlQueryEnabledModulesQuery): import("react-query").UseQueryResult<QueryEnabledModulesResponse, Error>;
