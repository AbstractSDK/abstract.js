"use strict";
/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.5.1.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Cw20Client = exports.Cw20QueryClient = void 0;
class Cw20QueryClient {
    constructor(client, contractAddress) {
        Object.defineProperty(this, "client", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "contractAddress", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "balance", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ address }) => __awaiter(this, void 0, void 0, function* () {
                return this.client.queryContractSmart(this.contractAddress, {
                    balance: {
                        address
                    }
                });
            })
        });
        Object.defineProperty(this, "tokenInfo", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: () => __awaiter(this, void 0, void 0, function* () {
                return this.client.queryContractSmart(this.contractAddress, {
                    token_info: {}
                });
            })
        });
        Object.defineProperty(this, "minter", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: () => __awaiter(this, void 0, void 0, function* () {
                return this.client.queryContractSmart(this.contractAddress, {
                    minter: {}
                });
            })
        });
        Object.defineProperty(this, "allowance", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ owner, spender }) => __awaiter(this, void 0, void 0, function* () {
                return this.client.queryContractSmart(this.contractAddress, {
                    allowance: {
                        owner,
                        spender
                    }
                });
            })
        });
        Object.defineProperty(this, "allAllowances", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ limit, owner, startAfter }) => __awaiter(this, void 0, void 0, function* () {
                return this.client.queryContractSmart(this.contractAddress, {
                    all_allowances: {
                        limit,
                        owner,
                        start_after: startAfter
                    }
                });
            })
        });
        Object.defineProperty(this, "allAccounts", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ limit, startAfter }) => __awaiter(this, void 0, void 0, function* () {
                return this.client.queryContractSmart(this.contractAddress, {
                    all_accounts: {
                        limit,
                        start_after: startAfter
                    }
                });
            })
        });
        Object.defineProperty(this, "marketingInfo", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: () => __awaiter(this, void 0, void 0, function* () {
                return this.client.queryContractSmart(this.contractAddress, {
                    marketing_info: {}
                });
            })
        });
        Object.defineProperty(this, "downloadLogo", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: () => __awaiter(this, void 0, void 0, function* () {
                return this.client.queryContractSmart(this.contractAddress, {
                    download_logo: {}
                });
            })
        });
        this.client = client;
        this.contractAddress = contractAddress;
        this.balance = this.balance.bind(this);
        this.tokenInfo = this.tokenInfo.bind(this);
        this.minter = this.minter.bind(this);
        this.allowance = this.allowance.bind(this);
        this.allAllowances = this.allAllowances.bind(this);
        this.allAccounts = this.allAccounts.bind(this);
        this.marketingInfo = this.marketingInfo.bind(this);
        this.downloadLogo = this.downloadLogo.bind(this);
    }
}
exports.Cw20QueryClient = Cw20QueryClient;
class Cw20Client extends Cw20QueryClient {
    constructor(client, sender, contractAddress) {
        super(client, contractAddress);
        Object.defineProperty(this, "client", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "sender", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "contractAddress", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "transfer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ amount, recipient }, fee = "auto", memo, funds) => __awaiter(this, void 0, void 0, function* () {
                return yield this.client.execute(this.sender, this.contractAddress, {
                    transfer: {
                        amount,
                        recipient
                    }
                }, fee, memo, funds);
            })
        });
        Object.defineProperty(this, "burn", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ amount }, fee = "auto", memo, funds) => __awaiter(this, void 0, void 0, function* () {
                return yield this.client.execute(this.sender, this.contractAddress, {
                    burn: {
                        amount
                    }
                }, fee, memo, funds);
            })
        });
        Object.defineProperty(this, "send", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ amount, contract, msg }, fee = "auto", memo, funds) => __awaiter(this, void 0, void 0, function* () {
                return yield this.client.execute(this.sender, this.contractAddress, {
                    send: {
                        amount,
                        contract,
                        msg
                    }
                }, fee, memo, funds);
            })
        });
        Object.defineProperty(this, "increaseAllowance", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ amount, expires, spender }, fee = "auto", memo, funds) => __awaiter(this, void 0, void 0, function* () {
                return yield this.client.execute(this.sender, this.contractAddress, {
                    increase_allowance: {
                        amount,
                        expires,
                        spender
                    }
                }, fee, memo, funds);
            })
        });
        Object.defineProperty(this, "decreaseAllowance", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ amount, expires, spender }, fee = "auto", memo, funds) => __awaiter(this, void 0, void 0, function* () {
                return yield this.client.execute(this.sender, this.contractAddress, {
                    decrease_allowance: {
                        amount,
                        expires,
                        spender
                    }
                }, fee, memo, funds);
            })
        });
        Object.defineProperty(this, "transferFrom", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ amount, owner, recipient }, fee = "auto", memo, funds) => __awaiter(this, void 0, void 0, function* () {
                return yield this.client.execute(this.sender, this.contractAddress, {
                    transfer_from: {
                        amount,
                        owner,
                        recipient
                    }
                }, fee, memo, funds);
            })
        });
        Object.defineProperty(this, "sendFrom", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ amount, contract, msg, owner }, fee = "auto", memo, funds) => __awaiter(this, void 0, void 0, function* () {
                return yield this.client.execute(this.sender, this.contractAddress, {
                    send_from: {
                        amount,
                        contract,
                        msg,
                        owner
                    }
                }, fee, memo, funds);
            })
        });
        Object.defineProperty(this, "burnFrom", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ amount, owner }, fee = "auto", memo, funds) => __awaiter(this, void 0, void 0, function* () {
                return yield this.client.execute(this.sender, this.contractAddress, {
                    burn_from: {
                        amount,
                        owner
                    }
                }, fee, memo, funds);
            })
        });
        Object.defineProperty(this, "mint", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ amount, recipient }, fee = "auto", memo, funds) => __awaiter(this, void 0, void 0, function* () {
                return yield this.client.execute(this.sender, this.contractAddress, {
                    mint: {
                        amount,
                        recipient
                    }
                }, fee, memo, funds);
            })
        });
        Object.defineProperty(this, "updateMinter", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ newMinter }, fee = "auto", memo, funds) => __awaiter(this, void 0, void 0, function* () {
                return yield this.client.execute(this.sender, this.contractAddress, {
                    update_minter: {
                        new_minter: newMinter
                    }
                }, fee, memo, funds);
            })
        });
        Object.defineProperty(this, "updateMarketing", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ description, marketing, project }, fee = "auto", memo, funds) => __awaiter(this, void 0, void 0, function* () {
                return yield this.client.execute(this.sender, this.contractAddress, {
                    update_marketing: {
                        description,
                        marketing,
                        project
                    }
                }, fee, memo, funds);
            })
        });
        Object.defineProperty(this, "uploadLogo", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: (fee = "auto", memo, funds) => __awaiter(this, void 0, void 0, function* () {
                return yield this.client.execute(this.sender, this.contractAddress, {
                    upload_logo: {}
                }, fee, memo, funds);
            })
        });
        this.client = client;
        this.sender = sender;
        this.contractAddress = contractAddress;
        this.transfer = this.transfer.bind(this);
        this.burn = this.burn.bind(this);
        this.send = this.send.bind(this);
        this.increaseAllowance = this.increaseAllowance.bind(this);
        this.decreaseAllowance = this.decreaseAllowance.bind(this);
        this.transferFrom = this.transferFrom.bind(this);
        this.sendFrom = this.sendFrom.bind(this);
        this.burnFrom = this.burnFrom.bind(this);
        this.mint = this.mint.bind(this);
        this.updateMinter = this.updateMinter.bind(this);
        this.updateMarketing = this.updateMarketing.bind(this);
        this.uploadLogo = this.uploadLogo.bind(this);
    }
}
exports.Cw20Client = Cw20Client;
//# sourceMappingURL=Cw20Contract.js.map