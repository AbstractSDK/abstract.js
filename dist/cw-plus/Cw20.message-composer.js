"use strict";
/**
 * This file was automatically generated by @cosmwasm/ts-codegen@0.11.1.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Cw20MessageComposer = void 0;
const tx_1 = require("cosmjs-types/cosmwasm/wasm/v1/tx");
const encoding_1 = require("@cosmjs/encoding");
class Cw20MessageComposer {
    constructor(sender, contractAddress) {
        Object.defineProperty(this, "sender", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "contractAddress", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "transfer", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ amount, recipient, }, funds) => {
                return {
                    typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',
                    value: tx_1.MsgExecuteContract.fromPartial({
                        sender: this.sender,
                        contract: this.contractAddress,
                        msg: (0, encoding_1.toUtf8)(JSON.stringify({
                            transfer: {
                                amount,
                                recipient,
                            },
                        })),
                        funds,
                    }),
                };
            }
        });
        Object.defineProperty(this, "burn", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ amount, }, funds) => {
                return {
                    typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',
                    value: tx_1.MsgExecuteContract.fromPartial({
                        sender: this.sender,
                        contract: this.contractAddress,
                        msg: (0, encoding_1.toUtf8)(JSON.stringify({
                            burn: {
                                amount,
                            },
                        })),
                        funds,
                    }),
                };
            }
        });
        Object.defineProperty(this, "send", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ amount, contract, msg, }, funds) => {
                return {
                    typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',
                    value: tx_1.MsgExecuteContract.fromPartial({
                        sender: this.sender,
                        contract: this.contractAddress,
                        msg: (0, encoding_1.toUtf8)(JSON.stringify({
                            send: {
                                amount,
                                contract,
                                msg,
                            },
                        })),
                        funds,
                    }),
                };
            }
        });
        Object.defineProperty(this, "increaseAllowance", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ amount, expires, spender, }, funds) => {
                return {
                    typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',
                    value: tx_1.MsgExecuteContract.fromPartial({
                        sender: this.sender,
                        contract: this.contractAddress,
                        msg: (0, encoding_1.toUtf8)(JSON.stringify({
                            increase_allowance: {
                                amount,
                                expires,
                                spender,
                            },
                        })),
                        funds,
                    }),
                };
            }
        });
        Object.defineProperty(this, "decreaseAllowance", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ amount, expires, spender, }, funds) => {
                return {
                    typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',
                    value: tx_1.MsgExecuteContract.fromPartial({
                        sender: this.sender,
                        contract: this.contractAddress,
                        msg: (0, encoding_1.toUtf8)(JSON.stringify({
                            decrease_allowance: {
                                amount,
                                expires,
                                spender,
                            },
                        })),
                        funds,
                    }),
                };
            }
        });
        Object.defineProperty(this, "transferFrom", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ amount, owner, recipient, }, funds) => {
                return {
                    typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',
                    value: tx_1.MsgExecuteContract.fromPartial({
                        sender: this.sender,
                        contract: this.contractAddress,
                        msg: (0, encoding_1.toUtf8)(JSON.stringify({
                            transfer_from: {
                                amount,
                                owner,
                                recipient,
                            },
                        })),
                        funds,
                    }),
                };
            }
        });
        Object.defineProperty(this, "sendFrom", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ amount, contract, msg, owner, }, funds) => {
                return {
                    typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',
                    value: tx_1.MsgExecuteContract.fromPartial({
                        sender: this.sender,
                        contract: this.contractAddress,
                        msg: (0, encoding_1.toUtf8)(JSON.stringify({
                            send_from: {
                                amount,
                                contract,
                                msg,
                                owner,
                            },
                        })),
                        funds,
                    }),
                };
            }
        });
        Object.defineProperty(this, "burnFrom", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ amount, owner, }, funds) => {
                return {
                    typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',
                    value: tx_1.MsgExecuteContract.fromPartial({
                        sender: this.sender,
                        contract: this.contractAddress,
                        msg: (0, encoding_1.toUtf8)(JSON.stringify({
                            burn_from: {
                                amount,
                                owner,
                            },
                        })),
                        funds,
                    }),
                };
            }
        });
        Object.defineProperty(this, "mint", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ amount, recipient, }, funds) => {
                return {
                    typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',
                    value: tx_1.MsgExecuteContract.fromPartial({
                        sender: this.sender,
                        contract: this.contractAddress,
                        msg: (0, encoding_1.toUtf8)(JSON.stringify({
                            mint: {
                                amount,
                                recipient,
                            },
                        })),
                        funds,
                    }),
                };
            }
        });
        Object.defineProperty(this, "updateMinter", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ newMinter, }, funds) => {
                return {
                    typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',
                    value: tx_1.MsgExecuteContract.fromPartial({
                        sender: this.sender,
                        contract: this.contractAddress,
                        msg: (0, encoding_1.toUtf8)(JSON.stringify({
                            update_minter: {
                                new_minter: newMinter,
                            },
                        })),
                        funds,
                    }),
                };
            }
        });
        Object.defineProperty(this, "updateMarketing", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ description, marketing, project, }, funds) => {
                return {
                    typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',
                    value: tx_1.MsgExecuteContract.fromPartial({
                        sender: this.sender,
                        contract: this.contractAddress,
                        msg: (0, encoding_1.toUtf8)(JSON.stringify({
                            update_marketing: {
                                description,
                                marketing,
                                project,
                            },
                        })),
                        funds,
                    }),
                };
            }
        });
        Object.defineProperty(this, "uploadLogo", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: (funds) => {
                return {
                    typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',
                    value: tx_1.MsgExecuteContract.fromPartial({
                        sender: this.sender,
                        contract: this.contractAddress,
                        msg: (0, encoding_1.toUtf8)(JSON.stringify({
                            upload_logo: {},
                        })),
                        funds,
                    }),
                };
            }
        });
        this.sender = sender;
        this.contractAddress = contractAddress;
        this.transfer = this.transfer.bind(this);
        this.burn = this.burn.bind(this);
        this.send = this.send.bind(this);
        this.increaseAllowance = this.increaseAllowance.bind(this);
        this.decreaseAllowance = this.decreaseAllowance.bind(this);
        this.transferFrom = this.transferFrom.bind(this);
        this.sendFrom = this.sendFrom.bind(this);
        this.burnFrom = this.burnFrom.bind(this);
        this.mint = this.mint.bind(this);
        this.updateMinter = this.updateMinter.bind(this);
        this.updateMarketing = this.updateMarketing.bind(this);
        this.uploadLogo = this.uploadLogo.bind(this);
    }
}
exports.Cw20MessageComposer = Cw20MessageComposer;
//# sourceMappingURL=Cw20.message-composer.js.map