/**
 * This file was automatically generated by @cosmwasm/ts-codegen@0.6.1.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */
import { ExecuteResult } from '@cosmjs/cosmwasm-stargate';
import { Coin, StdFee } from '@cosmjs/amino';
import { UseQueryOptions, UseMutationOptions } from '@tanstack/react-query';
import { ConfigResponse, GovernanceDetails } from '../contracts/FactoryContract';
import { FactoryQueryClient, FactoryClient } from '../contracts/FactoryContract';
export interface FactoryReactQuery<TResponse> {
    client: FactoryQueryClient | undefined;
    options?: Omit<UseQueryOptions<TResponse | undefined, Error, TResponse, (string | undefined)[]>, "'queryKey' | 'queryFn' | 'initialData'"> & {
        initialData?: undefined;
    };
}
export interface FactoryConfigQuery extends FactoryReactQuery<ConfigResponse> {
}
export declare function useFactoryConfigQuery({ client, options }: FactoryConfigQuery): import("@tanstack/react-query").UseQueryResult<ConfigResponse, Error>;
export interface FactoryCreateOsMutation {
    client: FactoryClient;
    msg: {
        description?: string;
        governance: GovernanceDetails;
        link?: string;
        name: string;
    };
    args?: {
        fee?: number | StdFee | 'auto';
        memo?: string;
        funds?: readonly Coin[];
    };
}
export declare function useFactoryCreateOsMutation(options?: Omit<UseMutationOptions<ExecuteResult, Error, FactoryCreateOsMutation>, 'mutationFn'>): import("@tanstack/react-query").UseMutationResult<ExecuteResult, Error, FactoryCreateOsMutation, unknown>;
export interface FactoryUpdateConfigMutation {
    client: FactoryClient;
    msg: {
        admin?: string;
        memoryContract?: string;
        moduleFactoryAddress?: string;
        subscriptionAddress?: string;
        versionControlContract?: string;
    };
    args?: {
        fee?: number | StdFee | 'auto';
        memo?: string;
        funds?: readonly Coin[];
    };
}
export declare function useFactoryUpdateConfigMutation(options?: Omit<UseMutationOptions<ExecuteResult, Error, FactoryUpdateConfigMutation>, 'mutationFn'>): import("@tanstack/react-query").UseMutationResult<ExecuteResult, Error, FactoryUpdateConfigMutation, unknown>;
export interface FactoryReceiveMutation {
    client: FactoryClient;
    msg: {
        amount: string;
        msg: string;
        sender: string;
    };
    args?: {
        fee?: number | StdFee | 'auto';
        memo?: string;
        funds?: readonly Coin[];
    };
}
export declare function useFactoryReceiveMutation(options?: Omit<UseMutationOptions<ExecuteResult, Error, FactoryReceiveMutation>, 'mutationFn'>): import("@tanstack/react-query").UseMutationResult<ExecuteResult, Error, FactoryReceiveMutation, unknown>;
