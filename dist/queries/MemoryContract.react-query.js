"use strict";
/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.4.2.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.useMemoryAssetsQuery = exports.useMemoryContractsQuery = exports.useMemoryContractListQuery = exports.useMemoryAssetListQuery = void 0;
const react_query_1 = require("@tanstack/react-query");
function useMemoryAssetListQuery({ client, args, options }) {
    return (0, react_query_1.useQuery)(["memoryAssetList", client === null || client === void 0 ? void 0 : client.contractAddress, JSON.stringify(args)], () => client ? client.assetList({
        iterLimit: args.iterLimit,
        lastAssetName: args.lastAssetName
    }) : undefined, Object.assign({ enabled: !!client && (options === null || options === void 0 ? void 0 : options.enabled) }, options));
}
exports.useMemoryAssetListQuery = useMemoryAssetListQuery;
function useMemoryContractListQuery({ client, args, options }) {
    return (0, react_query_1.useQuery)(["memoryContractList", client === null || client === void 0 ? void 0 : client.contractAddress, JSON.stringify(args)], () => client ? client.contractList({
        iterLimit: args.iterLimit,
        lastContractName: args.lastContractName
    }) : undefined, Object.assign({ enabled: !!client && (options === null || options === void 0 ? void 0 : options.enabled) }, options));
}
exports.useMemoryContractListQuery = useMemoryContractListQuery;
function useMemoryContractsQuery({ client, args, options }) {
    return (0, react_query_1.useQuery)(["memoryContracts", client === null || client === void 0 ? void 0 : client.contractAddress, JSON.stringify(args)], () => client ? client.contracts({
        names: args.names
    }) : undefined, Object.assign({ enabled: !!client && (options === null || options === void 0 ? void 0 : options.enabled) }, options));
}
exports.useMemoryContractsQuery = useMemoryContractsQuery;
function useMemoryAssetsQuery({ client, args, options }) {
    return (0, react_query_1.useQuery)(["memoryAssets", client === null || client === void 0 ? void 0 : client.contractAddress, JSON.stringify(args)], () => client ? client.assets({
        names: args.names
    }) : undefined, Object.assign({ enabled: !!client && (options === null || options === void 0 ? void 0 : options.enabled) }, options));
}
exports.useMemoryAssetsQuery = useMemoryAssetsQuery;
//# sourceMappingURL=MemoryContract.react-query.js.map