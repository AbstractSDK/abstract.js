"use strict";
/**
* This file was automatically generated by cosmwasm-typescript-gen@0.3.9.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the cosmwasm-typescript-gen generate command to regenerate this file.
*/
Object.defineProperty(exports, "__esModule", { value: true });
exports.useProxyConfigQuery = exports.useProxyTotalValueQuery = exports.useProxyHoldingValueQuery = exports.useProxyHoldingAmountQuery = exports.useProxyProxyAssetConfigQuery = exports.useProxyProxyAssetsQuery = void 0;
const react_query_1 = require("@tanstack/react-query");
function useProxyProxyAssetsQuery({ client, args, options }) {
    return (0, react_query_1.useQuery)(["proxyProxyAssets", client === null || client === void 0 ? void 0 : client.contractAddress], () => client ? client.proxyAssets({
        iterLimit: args.iterLimit,
        lastAssetName: args.lastAssetName
    }) : undefined, Object.assign(Object.assign({}, options), { enabled: !!client && (options === null || options === void 0 ? void 0 : options.enabled) }));
}
exports.useProxyProxyAssetsQuery = useProxyProxyAssetsQuery;
function useProxyProxyAssetConfigQuery({ client, args, options }) {
    return (0, react_query_1.useQuery)(["proxyProxyAssetConfig", client === null || client === void 0 ? void 0 : client.contractAddress], () => client ? client.proxyAssetConfig({
        identifier: args.identifier
    }) : undefined, Object.assign(Object.assign({}, options), { enabled: !!client && (options === null || options === void 0 ? void 0 : options.enabled) }));
}
exports.useProxyProxyAssetConfigQuery = useProxyProxyAssetConfigQuery;
function useProxyHoldingAmountQuery({ client, args, options }) {
    return (0, react_query_1.useQuery)(["proxyHoldingAmount", client === null || client === void 0 ? void 0 : client.contractAddress], () => client ? client.holdingAmount({
        identifier: args.identifier
    }) : undefined, Object.assign(Object.assign({}, options), { enabled: !!client && (options === null || options === void 0 ? void 0 : options.enabled) }));
}
exports.useProxyHoldingAmountQuery = useProxyHoldingAmountQuery;
function useProxyHoldingValueQuery({ client, args, options }) {
    return (0, react_query_1.useQuery)(["proxyHoldingValue", client === null || client === void 0 ? void 0 : client.contractAddress], () => client ? client.holdingValue({
        identifier: args.identifier
    }) : undefined, Object.assign(Object.assign({}, options), { enabled: !!client && (options === null || options === void 0 ? void 0 : options.enabled) }));
}
exports.useProxyHoldingValueQuery = useProxyHoldingValueQuery;
function useProxyTotalValueQuery({ client, options }) {
    return (0, react_query_1.useQuery)(["proxyTotalValue", client === null || client === void 0 ? void 0 : client.contractAddress], () => client ? client.totalValue() : undefined, Object.assign(Object.assign({}, options), { enabled: !!client && (options === null || options === void 0 ? void 0 : options.enabled) }));
}
exports.useProxyTotalValueQuery = useProxyTotalValueQuery;
function useProxyConfigQuery({ client, options }) {
    return (0, react_query_1.useQuery)(["proxyConfig", client === null || client === void 0 ? void 0 : client.contractAddress], () => client ? client.config() : undefined, Object.assign(Object.assign({}, options), { enabled: !!client && (options === null || options === void 0 ? void 0 : options.enabled) }));
}
exports.useProxyConfigQuery = useProxyConfigQuery;
//# sourceMappingURL=ProxyContract.react-query.js.map