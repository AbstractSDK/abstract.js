"use strict";
/**
 * This file was automatically generated by cosmwasm-typescript-gen@0.2.15.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the cosmwasm-typescript-gen generate command to regenerate this file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.useVersionControlOsCoreQuery = exports.useVersionControlCodeIdQuery = exports.useVersionControlApiAddressQuery = exports.useVersionControlConfigQuery = exports.useVersionControlCodeIdsQuery = exports.useVersionControlApiAddressesQuery = void 0;
const react_query_1 = require("@tanstack/react-query");
function useVersionControlApiAddressesQuery({ client, args, options, }) {
    return (0, react_query_1.useQuery)(['versionControlApiAddresses', client.contractAddress], () => client.apiAddresses({
        iterLimit: args.iterLimit,
        lastApiModule: args.lastApiModule,
    }), options);
}
exports.useVersionControlApiAddressesQuery = useVersionControlApiAddressesQuery;
function useVersionControlCodeIdsQuery({ client, args, options, }) {
    return (0, react_query_1.useQuery)(['versionControlCodeIds', client.contractAddress], () => client.codeIds({
        iterLimit: args.iterLimit,
        lastModule: args.lastModule,
    }), options);
}
exports.useVersionControlCodeIdsQuery = useVersionControlCodeIdsQuery;
function useVersionControlConfigQuery({ client, options }) {
    return (0, react_query_1.useQuery)(['versionControlConfig', client.contractAddress], () => client.config(), options);
}
exports.useVersionControlConfigQuery = useVersionControlConfigQuery;
function useVersionControlApiAddressQuery({ client, args, options, }) {
    return (0, react_query_1.useQuery)(['versionControlApiAddress', client.contractAddress], () => client.apiAddress({
        module: args.module,
    }), options);
}
exports.useVersionControlApiAddressQuery = useVersionControlApiAddressQuery;
function useVersionControlCodeIdQuery({ client, args, options }) {
    return (0, react_query_1.useQuery)(['versionControlCodeId', client.contractAddress], () => client.codeId({
        module: args.module,
    }), options);
}
exports.useVersionControlCodeIdQuery = useVersionControlCodeIdQuery;
function useVersionControlOsCoreQuery({ client, args, options }) {
    return (0, react_query_1.useQuery)(['versionControlOsCore', client.contractAddress], () => client.osCore({
        osId: args.osId,
    }), options);
}
exports.useVersionControlOsCoreQuery = useVersionControlOsCoreQuery;
//# sourceMappingURL=VersionControlContract.react-query.js.map