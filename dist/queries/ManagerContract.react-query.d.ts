/**
 * This file was automatically generated by cosmwasm-typescript-gen@0.3.9.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the cosmwasm-typescript-gen generate command to regenerate this file.
 */
import { UseQueryOptions } from '@tanstack/react-query';
import { ConfigResponse, InfoResponse, ModuleAddressesResponse, ModuleInfosResponse, ModuleVersionsResponse } from '../contracts/ManagerContract';
import { ManagerQueryClient } from '../contracts/ManagerContract';
export interface ManagerInfoQuery {
    client?: ManagerQueryClient;
    options?: Omit<UseQueryOptions<InfoResponse | undefined, Error, InfoResponse, (string | undefined)[]>, 'queryKey' | 'queryFn' | 'initialData'> & {
        initialData?: () => undefined;
    };
}
export declare function useManagerInfoQuery({ client, options }: ManagerInfoQuery): import("@tanstack/react-query").UseQueryResult<InfoResponse, Error>;
export interface ManagerConfigQuery {
    client?: ManagerQueryClient;
    options?: Omit<UseQueryOptions<ConfigResponse | undefined, Error, ConfigResponse, (string | undefined)[]>, 'queryKey' | 'queryFn' | 'initialData'> & {
        initialData?: () => undefined;
    };
}
export declare function useManagerConfigQuery({ client, options }: ManagerConfigQuery): import("@tanstack/react-query").UseQueryResult<ConfigResponse, Error>;
export interface ManagerModuleInfosQuery {
    client?: ManagerQueryClient;
    options?: Omit<UseQueryOptions<ModuleInfosResponse | undefined, Error, ModuleInfosResponse, (string | undefined)[]>, 'queryKey' | 'queryFn' | 'initialData'> & {
        initialData?: () => undefined;
    };
    args: {
        iterLimit?: number;
        lastModuleName?: string;
    };
}
export declare function useManagerModuleInfosQuery({ client, args, options }: ManagerModuleInfosQuery): import("@tanstack/react-query").UseQueryResult<ModuleInfosResponse, Error>;
export interface ManagerModuleAddressesQuery {
    client?: ManagerQueryClient;
    options?: Omit<UseQueryOptions<ModuleAddressesResponse | undefined, Error, ModuleAddressesResponse, (string | undefined)[]>, 'queryKey' | 'queryFn' | 'initialData'> & {
        initialData?: () => undefined;
    };
    args: {
        names: string[];
    };
}
export declare function useManagerModuleAddressesQuery({ client, args, options, }: ManagerModuleAddressesQuery): import("@tanstack/react-query").UseQueryResult<ModuleAddressesResponse, Error>;
export interface ManagerModuleVersionsQuery {
    client?: ManagerQueryClient;
    options?: Omit<UseQueryOptions<ModuleVersionsResponse | undefined, Error, ModuleVersionsResponse, (string | undefined)[]>, 'queryKey' | 'queryFn' | 'initialData'> & {
        initialData?: () => undefined;
    };
    args: {
        names: string[];
    };
}
export declare function useManagerModuleVersionsQuery({ client, args, options, }: ManagerModuleVersionsQuery): import("@tanstack/react-query").UseQueryResult<ModuleVersionsResponse, Error>;
