/**
* This file was automatically generated by cosmwasm-typescript-gen@0.2.15.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the cosmwasm-typescript-gen generate command to regenerate this file.
*/
import { __awaiter } from "tslib";
export class VersionControlQueryClient {
    constructor(client, contractAddress) {
        this.osCore = ({ osId }) => __awaiter(this, void 0, void 0, function* () {
            return this.client.queryContractSmart(this.contractAddress, {
                os_core: {
                    os_id: osId
                }
            });
        });
        this.codeId = ({ module }) => __awaiter(this, void 0, void 0, function* () {
            return this.client.queryContractSmart(this.contractAddress, {
                code_id: {
                    module
                }
            });
        });
        this.apiAddress = ({ module }) => __awaiter(this, void 0, void 0, function* () {
            return this.client.queryContractSmart(this.contractAddress, {
                api_address: {
                    module
                }
            });
        });
        this.config = () => __awaiter(this, void 0, void 0, function* () {
            return this.client.queryContractSmart(this.contractAddress, {
                config: {}
            });
        });
        this.codeIds = ({ iterLimit, lastModule }) => __awaiter(this, void 0, void 0, function* () {
            return this.client.queryContractSmart(this.contractAddress, {
                code_ids: {
                    iter_limit: iterLimit,
                    last_module: lastModule
                }
            });
        });
        this.apiAddresses = ({ iterLimit, lastApiModule }) => __awaiter(this, void 0, void 0, function* () {
            return this.client.queryContractSmart(this.contractAddress, {
                api_addresses: {
                    iter_limit: iterLimit,
                    last_api_module: lastApiModule
                }
            });
        });
        this.client = client;
        this.contractAddress = contractAddress;
        this.osCore = this.osCore.bind(this);
        this.codeId = this.codeId.bind(this);
        this.apiAddress = this.apiAddress.bind(this);
        this.config = this.config.bind(this);
        this.codeIds = this.codeIds.bind(this);
        this.apiAddresses = this.apiAddresses.bind(this);
    }
}
export class VersionControlClient extends VersionControlQueryClient {
    constructor(client, sender, contractAddress) {
        super(client, contractAddress);
        this.addCodeId = ({ codeId, module, version }, fee = "auto", memo, funds) => __awaiter(this, void 0, void 0, function* () {
            return yield this.client.execute(this.sender, this.contractAddress, {
                add_code_id: {
                    code_id: codeId,
                    module,
                    version
                }
            }, fee, memo, funds);
        });
        this.removeCodeId = ({ module, version }, fee = "auto", memo, funds) => __awaiter(this, void 0, void 0, function* () {
            return yield this.client.execute(this.sender, this.contractAddress, {
                remove_code_id: {
                    module,
                    version
                }
            }, fee, memo, funds);
        });
        this.addApi = ({ address, module, version }, fee = "auto", memo, funds) => __awaiter(this, void 0, void 0, function* () {
            return yield this.client.execute(this.sender, this.contractAddress, {
                add_api: {
                    address,
                    module,
                    version
                }
            }, fee, memo, funds);
        });
        this.removeApi = ({ module, version }, fee = "auto", memo, funds) => __awaiter(this, void 0, void 0, function* () {
            return yield this.client.execute(this.sender, this.contractAddress, {
                remove_api: {
                    module,
                    version
                }
            }, fee, memo, funds);
        });
        this.addOs = ({ managerAddress, osId, proxyAddress }, fee = "auto", memo, funds) => __awaiter(this, void 0, void 0, function* () {
            return yield this.client.execute(this.sender, this.contractAddress, {
                add_os: {
                    manager_address: managerAddress,
                    os_id: osId,
                    proxy_address: proxyAddress
                }
            }, fee, memo, funds);
        });
        this.setAdmin = ({ newAdmin }, fee = "auto", memo, funds) => __awaiter(this, void 0, void 0, function* () {
            return yield this.client.execute(this.sender, this.contractAddress, {
                set_admin: {
                    new_admin: newAdmin
                }
            }, fee, memo, funds);
        });
        this.setFactory = ({ newFactory }, fee = "auto", memo, funds) => __awaiter(this, void 0, void 0, function* () {
            return yield this.client.execute(this.sender, this.contractAddress, {
                set_factory: {
                    new_factory: newFactory
                }
            }, fee, memo, funds);
        });
        this.client = client;
        this.sender = sender;
        this.contractAddress = contractAddress;
        this.addCodeId = this.addCodeId.bind(this);
        this.removeCodeId = this.removeCodeId.bind(this);
        this.addApi = this.addApi.bind(this);
        this.removeApi = this.removeApi.bind(this);
        this.addOs = this.addOs.bind(this);
        this.setAdmin = this.setAdmin.bind(this);
        this.setFactory = this.setFactory.bind(this);
    }
}
