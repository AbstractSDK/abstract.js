/**
* This file was automatically generated by cosmwasm-typescript-gen@0.2.15.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the cosmwasm-typescript-gen generate command to regenerate this file.
*/
import { __awaiter } from "tslib";
export class Cw4GroupQueryClient {
    constructor(client, contractAddress) {
        this.admin = () => __awaiter(this, void 0, void 0, function* () {
            return this.client.queryContractSmart(this.contractAddress, {
                admin: {}
            });
        });
        this.totalWeight = () => __awaiter(this, void 0, void 0, function* () {
            return this.client.queryContractSmart(this.contractAddress, {
                total_weight: {}
            });
        });
        this.listMembers = ({ limit, startAfter }) => __awaiter(this, void 0, void 0, function* () {
            return this.client.queryContractSmart(this.contractAddress, {
                list_members: {
                    limit,
                    start_after: startAfter
                }
            });
        });
        this.member = ({ addr, atHeight }) => __awaiter(this, void 0, void 0, function* () {
            return this.client.queryContractSmart(this.contractAddress, {
                member: {
                    addr,
                    at_height: atHeight
                }
            });
        });
        this.hooks = () => __awaiter(this, void 0, void 0, function* () {
            return this.client.queryContractSmart(this.contractAddress, {
                hooks: {}
            });
        });
        this.client = client;
        this.contractAddress = contractAddress;
        this.admin = this.admin.bind(this);
        this.totalWeight = this.totalWeight.bind(this);
        this.listMembers = this.listMembers.bind(this);
        this.member = this.member.bind(this);
        this.hooks = this.hooks.bind(this);
    }
}
export class Cw4GroupClient extends Cw4GroupQueryClient {
    constructor(client, sender, contractAddress) {
        super(client, contractAddress);
        this.updateAdmin = ({ admin }, fee = "auto", memo, funds) => __awaiter(this, void 0, void 0, function* () {
            return yield this.client.execute(this.sender, this.contractAddress, {
                update_admin: {
                    admin
                }
            }, fee, memo, funds);
        });
        this.updateMembers = ({ add, remove }, fee = "auto", memo, funds) => __awaiter(this, void 0, void 0, function* () {
            return yield this.client.execute(this.sender, this.contractAddress, {
                update_members: {
                    add,
                    remove
                }
            }, fee, memo, funds);
        });
        this.addHook = ({ addr }, fee = "auto", memo, funds) => __awaiter(this, void 0, void 0, function* () {
            return yield this.client.execute(this.sender, this.contractAddress, {
                add_hook: {
                    addr
                }
            }, fee, memo, funds);
        });
        this.removeHook = ({ addr }, fee = "auto", memo, funds) => __awaiter(this, void 0, void 0, function* () {
            return yield this.client.execute(this.sender, this.contractAddress, {
                remove_hook: {
                    addr
                }
            }, fee, memo, funds);
        });
        this.client = client;
        this.sender = sender;
        this.contractAddress = contractAddress;
        this.updateAdmin = this.updateAdmin.bind(this);
        this.updateMembers = this.updateMembers.bind(this);
        this.addHook = this.addHook.bind(this);
        this.removeHook = this.removeHook.bind(this);
    }
}
