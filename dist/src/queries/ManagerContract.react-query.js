/**
* This file was automatically generated by cosmwasm-typescript-gen@0.3.9.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the cosmwasm-typescript-gen generate command to regenerate this file.
*/
import { useQuery } from "react-query";
export function useManagerInfoQuery({ client, options }) {
    return useQuery(["managerInfo", client === null || client === void 0 ? void 0 : client.contractAddress], () => client ? client.info() : undefined, Object.assign(Object.assign({}, options), { enabled: !!client && (options === null || options === void 0 ? void 0 : options.enabled) }));
}
export function useManagerConfigQuery({ client, options }) {
    return useQuery(["managerConfig", client === null || client === void 0 ? void 0 : client.contractAddress], () => client ? client.config() : undefined, Object.assign(Object.assign({}, options), { enabled: !!client && (options === null || options === void 0 ? void 0 : options.enabled) }));
}
export function useManagerModuleInfosQuery({ client, args, options }) {
    return useQuery(["managerModuleInfos", client === null || client === void 0 ? void 0 : client.contractAddress], () => client ? client.moduleInfos({
        iterLimit: args.iterLimit,
        lastModuleName: args.lastModuleName
    }) : undefined, Object.assign({ enabled: !!client }, options));
}
export function useManagerModuleAddressesQuery({ client, args, options }) {
    return useQuery(["managerModuleAddresses", client === null || client === void 0 ? void 0 : client.contractAddress], () => client ? client.moduleAddresses({
        names: args.names
    }) : undefined, Object.assign(Object.assign({}, options), { enabled: !!client && (options === null || options === void 0 ? void 0 : options.enabled) }));
}
export function useManagerModuleVersionsQuery({ client, args, options }) {
    return useQuery(["managerModuleVersions", client === null || client === void 0 ? void 0 : client.contractAddress], () => client ? client.moduleVersions({
        names: args.names
    }) : undefined, Object.assign(Object.assign({}, options), { enabled: !!client && (options === null || options === void 0 ? void 0 : options.enabled) }));
}
