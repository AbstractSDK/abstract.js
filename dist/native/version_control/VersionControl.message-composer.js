"use strict";
/**
 * This file was automatically generated by @cosmwasm/ts-codegen@0.14.0.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.VersionControlMessageComposer = void 0;
const tx_1 = require("cosmjs-types/cosmwasm/wasm/v1/tx");
const encoding_1 = require("@cosmjs/encoding");
class VersionControlMessageComposer {
    constructor(sender, contractAddress) {
        Object.defineProperty(this, "sender", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "contractAddress", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        Object.defineProperty(this, "addCodeId", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ codeId, module, version, }, funds) => {
                return {
                    typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',
                    value: tx_1.MsgExecuteContract.fromPartial({
                        sender: this.sender,
                        contract: this.contractAddress,
                        msg: (0, encoding_1.toUtf8)(JSON.stringify({
                            add_code_id: {
                                code_id: codeId,
                                module,
                                version,
                            },
                        })),
                        funds,
                    }),
                };
            }
        });
        Object.defineProperty(this, "removeCodeId", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ module, version, }, funds) => {
                return {
                    typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',
                    value: tx_1.MsgExecuteContract.fromPartial({
                        sender: this.sender,
                        contract: this.contractAddress,
                        msg: (0, encoding_1.toUtf8)(JSON.stringify({
                            remove_code_id: {
                                module,
                                version,
                            },
                        })),
                        funds,
                    }),
                };
            }
        });
        Object.defineProperty(this, "addApi", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ address, module, version, }, funds) => {
                return {
                    typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',
                    value: tx_1.MsgExecuteContract.fromPartial({
                        sender: this.sender,
                        contract: this.contractAddress,
                        msg: (0, encoding_1.toUtf8)(JSON.stringify({
                            add_api: {
                                address,
                                module,
                                version,
                            },
                        })),
                        funds,
                    }),
                };
            }
        });
        Object.defineProperty(this, "removeApi", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ module, version, }, funds) => {
                return {
                    typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',
                    value: tx_1.MsgExecuteContract.fromPartial({
                        sender: this.sender,
                        contract: this.contractAddress,
                        msg: (0, encoding_1.toUtf8)(JSON.stringify({
                            remove_api: {
                                module,
                                version,
                            },
                        })),
                        funds,
                    }),
                };
            }
        });
        Object.defineProperty(this, "addOs", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ managerAddress, osId, proxyAddress, }, funds) => {
                return {
                    typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',
                    value: tx_1.MsgExecuteContract.fromPartial({
                        sender: this.sender,
                        contract: this.contractAddress,
                        msg: (0, encoding_1.toUtf8)(JSON.stringify({
                            add_os: {
                                manager_address: managerAddress,
                                os_id: osId,
                                proxy_address: proxyAddress,
                            },
                        })),
                        funds,
                    }),
                };
            }
        });
        Object.defineProperty(this, "setAdmin", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ newAdmin, }, funds) => {
                return {
                    typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',
                    value: tx_1.MsgExecuteContract.fromPartial({
                        sender: this.sender,
                        contract: this.contractAddress,
                        msg: (0, encoding_1.toUtf8)(JSON.stringify({
                            set_admin: {
                                new_admin: newAdmin,
                            },
                        })),
                        funds,
                    }),
                };
            }
        });
        Object.defineProperty(this, "setFactory", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: ({ newFactory, }, funds) => {
                return {
                    typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',
                    value: tx_1.MsgExecuteContract.fromPartial({
                        sender: this.sender,
                        contract: this.contractAddress,
                        msg: (0, encoding_1.toUtf8)(JSON.stringify({
                            set_factory: {
                                new_factory: newFactory,
                            },
                        })),
                        funds,
                    }),
                };
            }
        });
        this.sender = sender;
        this.contractAddress = contractAddress;
        this.addCodeId = this.addCodeId.bind(this);
        this.removeCodeId = this.removeCodeId.bind(this);
        this.addApi = this.addApi.bind(this);
        this.removeApi = this.removeApi.bind(this);
        this.addOs = this.addOs.bind(this);
        this.setAdmin = this.setAdmin.bind(this);
        this.setFactory = this.setFactory.bind(this);
    }
}
exports.VersionControlMessageComposer = VersionControlMessageComposer;
//# sourceMappingURL=VersionControl.message-composer.js.map