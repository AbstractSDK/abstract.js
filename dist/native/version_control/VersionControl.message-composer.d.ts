/**
 * This file was automatically generated by @cosmwasm/ts-codegen@0.14.0.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */
import { Coin } from '@cosmjs/amino';
import { MsgExecuteContractEncodeObject } from 'cosmwasm';
export interface VersionControlMessage {
    contractAddress: string;
    sender: string;
    addCodeId: ({ codeId, module, version, }: {
        codeId: number;
        module: string;
        version: string;
    }, funds?: Coin[]) => MsgExecuteContractEncodeObject;
    removeCodeId: ({ module, version, }: {
        module: string;
        version: string;
    }, funds?: Coin[]) => MsgExecuteContractEncodeObject;
    addApi: ({ address, module, version, }: {
        address: string;
        module: string;
        version: string;
    }, funds?: Coin[]) => MsgExecuteContractEncodeObject;
    removeApi: ({ module, version, }: {
        module: string;
        version: string;
    }, funds?: Coin[]) => MsgExecuteContractEncodeObject;
    addOs: ({ managerAddress, osId, proxyAddress, }: {
        managerAddress: string;
        osId: number;
        proxyAddress: string;
    }, funds?: Coin[]) => MsgExecuteContractEncodeObject;
    setAdmin: ({ newAdmin, }: {
        newAdmin: string;
    }, funds?: Coin[]) => MsgExecuteContractEncodeObject;
    setFactory: ({ newFactory, }: {
        newFactory: string;
    }, funds?: Coin[]) => MsgExecuteContractEncodeObject;
}
export declare class VersionControlMessageComposer implements VersionControlMessage {
    sender: string;
    contractAddress: string;
    constructor(sender: string, contractAddress: string);
    addCodeId: ({ codeId, module, version, }: {
        codeId: number;
        module: string;
        version: string;
    }, funds?: Coin[]) => MsgExecuteContractEncodeObject;
    removeCodeId: ({ module, version, }: {
        module: string;
        version: string;
    }, funds?: Coin[]) => MsgExecuteContractEncodeObject;
    addApi: ({ address, module, version, }: {
        address: string;
        module: string;
        version: string;
    }, funds?: Coin[]) => MsgExecuteContractEncodeObject;
    removeApi: ({ module, version, }: {
        module: string;
        version: string;
    }, funds?: Coin[]) => MsgExecuteContractEncodeObject;
    addOs: ({ managerAddress, osId, proxyAddress, }: {
        managerAddress: string;
        osId: number;
        proxyAddress: string;
    }, funds?: Coin[]) => MsgExecuteContractEncodeObject;
    setAdmin: ({ newAdmin, }: {
        newAdmin: string;
    }, funds?: Coin[]) => MsgExecuteContractEncodeObject;
    setFactory: ({ newFactory, }: {
        newFactory: string;
    }, funds?: Coin[]) => MsgExecuteContractEncodeObject;
}
