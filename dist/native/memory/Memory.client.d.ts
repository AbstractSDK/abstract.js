/**
 * This file was automatically generated by @cosmwasm/ts-codegen@0.11.1.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */
import { CosmWasmClient } from '@cosmjs/cosmwasm-stargate';
import { AssetListResponse, AssetsResponse, ContractListResponse, ContractEntry, ContractsResponse } from './Memory.types';
export interface MemoryReadOnlyInterface {
    contractAddress: string;
    assets: ({ names }: {
        names: string[];
    }) => Promise<AssetsResponse>;
    contracts: ({ names }: {
        names: ContractEntry[];
    }) => Promise<ContractsResponse>;
    contractList: ({ iterLimit, lastContract, }: {
        iterLimit?: number;
        lastContract?: ContractEntry;
    }) => Promise<ContractListResponse>;
    assetList: ({ iterLimit, lastAssetName, }: {
        iterLimit?: number;
        lastAssetName?: string;
    }) => Promise<AssetListResponse>;
}
export declare class MemoryQueryClient implements MemoryReadOnlyInterface {
    client: CosmWasmClient;
    contractAddress: string;
    constructor(client: CosmWasmClient, contractAddress: string);
    assets: ({ names }: {
        names: string[];
    }) => Promise<AssetsResponse>;
    contracts: ({ names }: {
        names: ContractEntry[];
    }) => Promise<ContractsResponse>;
    contractList: ({ iterLimit, lastContract, }: {
        iterLimit?: number | undefined;
        lastContract?: ContractEntry | undefined;
    }) => Promise<ContractListResponse>;
    assetList: ({ iterLimit, lastAssetName, }: {
        iterLimit?: number | undefined;
        lastAssetName?: string | undefined;
    }) => Promise<AssetListResponse>;
}
