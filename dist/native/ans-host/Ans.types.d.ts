/**
 * This file was automatically generated by @cosmwasm/ts-codegen@0.21.1.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */
export interface InstantiateMsg {
}
export declare type ExecuteMsg = {
    update_contract_addresses: {
        to_add: [UncheckedContractEntry, string][];
        to_remove: UncheckedContractEntry[];
    };
} | {
    update_asset_addresses: {
        to_add: [string, AssetInfoBaseForString][];
        to_remove: string[];
    };
} | {
    update_channels: {
        to_add: [UncheckedChannelEntry, string][];
        to_remove: UncheckedChannelEntry[];
    };
} | {
    set_admin: {
        admin: string;
    };
};
export declare type AssetInfoBaseForString = {
    native: string;
} | {
    cw20: string;
} | {
    cw1155: [string, string];
};
export interface UncheckedContractEntry {
    contract: string;
    protocol: string;
}
export interface UncheckedChannelEntry {
    connected_chain: string;
    protocol: string;
}
export declare type QueryMsg = {
    assets: {
        names: string[];
    };
} | {
    asset_list: {
        page_size?: number | null;
        page_token?: string | null;
    };
} | {
    contracts: {
        names: ContractEntry[];
    };
} | {
    contract_list: {
        page_size?: number | null;
        page_token?: ContractEntry | null;
    };
} | {
    channels: {
        names: ChannelEntry[];
    };
} | {
    channel_list: {
        page_size?: number | null;
        page_token?: ChannelEntry | null;
    };
};
export interface ContractEntry {
    contract: string;
    protocol: string;
}
export interface ChannelEntry {
    connected_chain: string;
    protocol: string;
}
export interface MigrateMsg {
}
export declare type AssetEntry = string;
export declare type AssetInfoBaseForAddr = {
    native: string;
} | {
    cw20: Addr;
} | {
    cw1155: [Addr, string];
};
export declare type Addr = string;
export interface AssetListResponse {
    assets: [AssetEntry, AssetInfoBaseForAddr][];
}
export interface AssetsResponse {
    assets: [AssetEntry, AssetInfoBaseForAddr][];
}
export interface ChannelListResponse {
    channels: [ChannelEntry, string][];
}
export interface ChannelsResponse {
    channels: [ChannelEntry, string][];
}
export interface ContractListResponse {
    contracts: [ContractEntry, string][];
}
export interface ContractsResponse {
    contracts: [ContractEntry, string][];
}
