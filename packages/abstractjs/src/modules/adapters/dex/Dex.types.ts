/**
 * This file was automatically generated by @cosmwasm/ts-codegen@0.24.0.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */

export interface InstantiateMsg {}
export type DexAction =
  | {
      provide_liquidity: {
        assets: AnsAsset[]
        max_spread?: Decimal | null
      }
    }
  | {
      provide_liquidity_symmetric: {
        offer_asset: AnsAsset
        paired_assets: AssetEntry[]
      }
    }
  | {
      withdraw_liquidity: {
        amount: Uint128
        lp_token: AssetEntry
      }
    }
  | {
      swap: {
        ask_asset: AssetEntry
        belief_price?: Decimal | null
        max_spread?: Decimal | null
        offer_asset: AnsAsset
      }
    }
  | {
      custom_swap: {
        ask_assets: AnsAsset[]
        max_spread?: Decimal | null
        offer_assets: AnsAsset[]
        router?: SwapRouter | null
      }
    }
export type Uint128 = string
export type AssetEntry = string
export type Decimal = string
export type SwapRouter =
  | 'matrix'
  | {
      custom: string
    }
export interface ExecuteMsg {
  action: DexAction
  dex: string
}
export interface AnsAsset {
  amount: Uint128
  name: AssetEntry
}
export type QueryMsg = {
  simulate_swap: {
    ask_asset: AssetEntry
    dex?: string | null
    offer_asset: AnsAsset
  }
}
export interface MigrateMsg {}
export type DexAssetPairing = [string, string, string]
export interface SimulateSwapResponse {
  commission: [AssetEntry, Uint128]
  pool: DexAssetPairing
  return_amount: Uint128
  spread_amount: Uint128
}
export type DexExecuteMsg = ExecuteMsg
