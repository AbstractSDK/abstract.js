/**
 * This file was automatically generated by @cosmwasm/ts-codegen@0.28.0.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */

export type Uint128 = string
export interface InstantiateMsg {
  allow_direct_module_registration_and_updates?: boolean | null
  namespace_registration_fee?: Coin | null
}
export interface Coin {
  amount: Uint128
  denom: string
  [k: string]: unknown
}
export type ExecuteMsg =
  | {
      remove_module: {
        module: ModuleInfo
      }
    }
  | {
      yank_module: {
        module: ModuleInfo
      }
    }
  | {
      propose_modules: {
        modules: [ModuleInfo, ModuleReference][]
      }
    }
  | {
      set_module_monetization: {
        module_name: string
        monetization: Monetization
        namespace: Namespace
      }
    }
  | {
      set_module_metadata: {
        metadata: string
        module: ModuleInfo
      }
    }
  | {
      approve_or_reject_modules: {
        approves: ModuleInfo[]
        rejects: ModuleInfo[]
      }
    }
  | {
      claim_namespace: {
        account_id: number
        namespace: string
      }
    }
  | {
      remove_namespaces: {
        namespaces: string[]
      }
    }
  | {
      add_account: {
        account_base: AccountBase
        account_id: number
      }
    }
  | {
      update_config: {
        allow_direct_module_registration_and_updates?: boolean | null
        namespace_registration_fee?: Coin | null
      }
    }
  | {
      set_factory: {
        new_factory: string
      }
    }
  | {
      update_ownership: Action
    }
export type Namespace = string
export type ModuleVersion =
  | 'latest'
  | {
      version: string
    }
export type ModuleReference =
  | {
      account_base: number
    }
  | {
      native: Addr
    }
  | {
      adapter: Addr
    }
  | {
      app: number
    }
  | {
      standalone: number
    }
export type Addr = string
export type Monetization =
  | 'none'
  | {
      install_fee: FixedFee
    }
export type Action =
  | {
      transfer_ownership: {
        expiry?: Expiration | null
        new_owner: string
      }
    }
  | 'accept_ownership'
  | 'renounce_ownership'
export type Expiration =
  | {
      at_height: number
    }
  | {
      at_time: Timestamp
    }
  | {
      never: {}
    }
export type Timestamp = Uint64
export type Uint64 = string
export interface ModuleInfo {
  name: string
  namespace: Namespace
  version: ModuleVersion
}
export interface FixedFee {
  fee: Coin
}
export interface AccountBase {
  manager: Addr
  proxy: Addr
}
export type QueryMsg =
  | {
      account_base: {
        account_id: number
      }
    }
  | {
      modules: {
        infos: ModuleInfo[]
      }
    }
  | {
      namespaces: {
        accounts: number[]
      }
    }
  | {
      namespace: {
        namespace: Namespace
      }
    }
  | {
      config: {}
    }
  | {
      module_list: {
        filter?: ModuleFilter | null
        limit?: number | null
        start_after?: ModuleInfo | null
      }
    }
  | {
      namespace_list: {
        limit?: number | null
        start_after?: string | null
      }
    }
  | {
      ownership: {}
    }
export type ModuleStatus = 'r_e_g_i_s_t_e_r_e_d' | 'p_e_n_d_i_n_g' | 'y_a_n_k_e_d'
export interface ModuleFilter {
  name?: string | null
  namespace?: string | null
  status?: ModuleStatus | null
  version?: string | null
}
export interface MigrateMsg {}
export interface AccountBaseResponse {
  account_base: AccountBase
}
export interface ConfigResponse {
  factory: Addr
}
export interface ModulesListResponse {
  modules: ModuleResponse[]
}
export interface ModuleResponse {
  config: ModuleConfiguration
  module: Module
}
export interface ModuleConfiguration {
  metadata: string
  monetization: Monetization
}
export interface Module {
  info: ModuleInfo
  reference: ModuleReference
}
export interface ModulesResponse {
  modules: ModuleResponse[]
}
export interface NamespaceResponse {
  account_base: AccountBase
  account_id: number
}
export interface NamespaceListResponse {
  namespaces: [Namespace, number][]
}
export interface NamespacesResponse {
  namespaces: [Namespace, number][]
}
export interface OwnershipForString {
  owner?: string | null
  pending_expiry?: Expiration | null
  pending_owner?: string | null
}
export type VersionControlExecuteMsg = ExecuteMsg
