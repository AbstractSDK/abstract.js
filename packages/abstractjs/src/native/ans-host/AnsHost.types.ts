/**
 * This file was automatically generated by @cosmwasm/ts-codegen@0.28.0.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */

export interface InstantiateMsg {}
export type ExecuteMsg =
  | {
      update_contract_addresses: {
        to_add: [UncheckedContractEntry, string][]
        to_remove: UncheckedContractEntry[]
      }
    }
  | {
      update_asset_addresses: {
        to_add: [string, AssetInfoBaseForString][]
        to_remove: string[]
      }
    }
  | {
      update_channels: {
        to_add: [UncheckedChannelEntry, string][]
        to_remove: UncheckedChannelEntry[]
      }
    }
  | {
      update_dexes: {
        to_add: string[]
        to_remove: string[]
      }
    }
  | {
      update_pools: {
        to_add: [PoolAddressBaseForString, PoolMetadata][]
        to_remove: UniquePoolId[]
      }
    }
  | {
      update_ownership: Action
    }
export type AssetInfoBaseForString =
  | {
      native: string
    }
  | {
      cw20: string
    }
export type PoolAddressBaseForString =
  | {
      separate_addresses: {
        liquidity: string
        swap: string
      }
    }
  | {
      contract: string
    }
  | {
      id: number
    }
export type AssetEntry = string
export type PoolType = 'ConstantProduct' | 'Stable' | 'Weighted' | 'LiquidityBootstrap'
export type UniquePoolId = number
export type Action =
  | {
      transfer_ownership: {
        expiry?: Expiration | null
        new_owner: string
      }
    }
  | 'accept_ownership'
  | 'renounce_ownership'
export type Expiration =
  | {
      at_height: number
    }
  | {
      at_time: Timestamp
    }
  | {
      never: {}
    }
export type Timestamp = Uint64
export type Uint64 = string
export interface UncheckedContractEntry {
  contract: string
  protocol: string
}
export interface UncheckedChannelEntry {
  connected_chain: string
  protocol: string
}
export interface PoolMetadata {
  assets: AssetEntry[]
  dex: string
  pool_type: PoolType
}
export type QueryMsg =
  | {
      config: {}
    }
  | {
      assets: {
        names: string[]
      }
    }
  | {
      asset_list: {
        filter?: AssetFilter | null
        limit?: number | null
        start_after?: string | null
      }
    }
  | {
      asset_infos: {
        infos: AssetInfoBaseForString[]
      }
    }
  | {
      asset_info_list: {
        filter?: AssetInfoFilter | null
        limit?: number | null
        start_after?: AssetInfoBaseForString | null
      }
    }
  | {
      contracts: {
        entries: ContractEntry[]
      }
    }
  | {
      contract_list: {
        filter?: ContractFilter | null
        limit?: number | null
        start_after?: ContractEntry | null
      }
    }
  | {
      channels: {
        entries: ChannelEntry[]
      }
    }
  | {
      channel_list: {
        filter?: ChannelFilter | null
        limit?: number | null
        start_after?: ChannelEntry | null
      }
    }
  | {
      registered_dexes: {}
    }
  | {
      pools: {
        pairings: DexAssetPairing[]
      }
    }
  | {
      pool_list: {
        filter?: AssetPairingFilter | null
        limit?: number | null
        start_after?: DexAssetPairing | null
      }
    }
  | {
      pool_metadatas: {
        ids: UniquePoolId[]
      }
    }
  | {
      pool_metadata_list: {
        filter?: PoolMetadataFilter | null
        limit?: number | null
        start_after?: UniquePoolId | null
      }
    }
  | {
      ownership: {}
    }
export type DexAssetPairing = [AssetEntry, AssetEntry, string]
export interface AssetFilter {}
export interface AssetInfoFilter {}
export interface ContractEntry {
  contract: string
  protocol: string
}
export interface ContractFilter {}
export interface ChannelEntry {
  connected_chain: string
  protocol: string
}
export interface ChannelFilter {}
export interface AssetPairingFilter {
  asset_pair?: [AssetEntry, AssetEntry] | null
  dex?: string | null
}
export interface PoolMetadataFilter {
  pool_type?: PoolType | null
}
export interface MigrateMsg {}
export type AssetInfoBaseForAddr =
  | {
      native: string
    }
  | {
      cw20: Addr
    }
export type Addr = string
export interface AssetInfoListResponse {
  infos: [AssetInfoBaseForAddr, AssetEntry][]
}
export interface AssetsResponse {
  assets: [AssetEntry, AssetInfoBaseForAddr][]
}
export interface AssetListResponse {
  assets: [AssetEntry, AssetInfoBaseForAddr][]
}
export interface ChannelListResponse {
  channels: [ChannelEntry, string][]
}
export interface ChannelsResponse {
  channels: [ChannelEntry, string][]
}
export interface ConfigResponse {
  next_unique_pool_id: UniquePoolId
}
export interface ContractListResponse {
  contracts: [ContractEntry, Addr][]
}
export interface ContractsResponse {
  contracts: [ContractEntry, Addr][]
}
export interface OwnershipForString {
  owner?: string | null
  pending_expiry?: Expiration | null
  pending_owner?: string | null
}
export type PoolAddressBaseForAddr =
  | {
      separate_addresses: {
        liquidity: Addr
        swap: Addr
      }
    }
  | {
      contract: Addr
    }
  | {
      id: number
    }
export interface PoolAddressListResponse {
  pools: [DexAssetPairing, PoolReference[]][]
}
export interface PoolReference {
  pool_address: PoolAddressBaseForAddr
  unique_id: UniquePoolId
}
export interface PoolMetadataListResponse {
  metadatas: [UniquePoolId, PoolMetadata][]
}
export interface PoolMetadatasResponse {
  metadatas: [UniquePoolId, PoolMetadata][]
}
export interface PoolsResponse {
  pools: [DexAssetPairing, PoolReference[]][]
}
export interface RegisteredDexesResponse {
  dexes: string[]
}
export type AnsHostExecuteMsg = ExecuteMsg
