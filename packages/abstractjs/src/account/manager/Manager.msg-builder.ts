/**
 * This file was automatically generated by @cosmwasm/ts-codegen@0.28.0.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */

import {
  GovernanceDetailsForString,
  InstantiateMsg,
  ExecuteMsg,
  Binary,
  Namespace,
  ModuleVersion,
  ModuleReference,
  Addr,
  Action,
  Expiration,
  Timestamp,
  Uint64,
  ModuleInfo,
  Module,
  CallbackMsg,
  QueryMsg,
  MigrateMsg,
  ConfigResponse,
  GovernanceDetailsForAddr,
  InfoResponse,
  AccountInfoForAddr,
  ModuleAddressesResponse,
  ModuleInfosResponse,
  ManagerModuleInfo,
  ContractVersion,
  ModuleVersionsResponse,
  OwnershipForString,
} from './Manager.types'
import { CamelCasedProperties } from 'type-fest'
export abstract class ManagerExecuteMsgBuilder {
  static execOnModule = ({
    execMsg,
    moduleId,
  }: CamelCasedProperties<
    Extract<
      ExecuteMsg,
      {
        exec_on_module: unknown
      }
    >['exec_on_module']
  >): ExecuteMsg => {
    return {
      exec_on_module: {
        exec_msg: execMsg,
        module_id: moduleId,
      } as const,
    }
  }
  static updateInternalConfig = (binary: Binary): ExecuteMsg => {
    return {
      update_internal_config: binary,
    }
  }
  static installModule = ({
    initMsg,
    module,
  }: CamelCasedProperties<
    Extract<
      ExecuteMsg,
      {
        install_module: unknown
      }
    >['install_module']
  >): ExecuteMsg => {
    return {
      install_module: {
        init_msg: initMsg,
        module,
      } as const,
    }
  }
  static registerModule = ({
    module,
    moduleAddr,
  }: CamelCasedProperties<
    Extract<
      ExecuteMsg,
      {
        register_module: unknown
      }
    >['register_module']
  >): ExecuteMsg => {
    return {
      register_module: {
        module,
        module_addr: moduleAddr,
      } as const,
    }
  }
  static uninstallModule = ({
    moduleId,
  }: CamelCasedProperties<
    Extract<
      ExecuteMsg,
      {
        uninstall_module: unknown
      }
    >['uninstall_module']
  >): ExecuteMsg => {
    return {
      uninstall_module: {
        module_id: moduleId,
      } as const,
    }
  }
  static upgrade = ({
    modules,
  }: CamelCasedProperties<
    Extract<
      ExecuteMsg,
      {
        upgrade: unknown
      }
    >['upgrade']
  >): ExecuteMsg => {
    return {
      upgrade: {
        modules,
      } as const,
    }
  }
  static updateInfo = ({
    description,
    link,
    name,
  }: CamelCasedProperties<
    Extract<
      ExecuteMsg,
      {
        update_info: unknown
      }
    >['update_info']
  >): ExecuteMsg => {
    return {
      update_info: {
        description,
        link,
        name,
      } as const,
    }
  }
  static setOwner = ({
    owner,
  }: CamelCasedProperties<
    Extract<
      ExecuteMsg,
      {
        set_owner: unknown
      }
    >['set_owner']
  >): ExecuteMsg => {
    return {
      set_owner: {
        owner,
      } as const,
    }
  }
  static updateStatus = ({
    isSuspended,
  }: CamelCasedProperties<
    Extract<
      ExecuteMsg,
      {
        update_status: unknown
      }
    >['update_status']
  >): ExecuteMsg => {
    return {
      update_status: {
        is_suspended: isSuspended,
      } as const,
    }
  }
  static updateSettings = ({
    ibcEnabled,
  }: CamelCasedProperties<
    Extract<
      ExecuteMsg,
      {
        update_settings: unknown
      }
    >['update_settings']
  >): ExecuteMsg => {
    return {
      update_settings: {
        ibc_enabled: ibcEnabled,
      } as const,
    }
  }
  static callback = (): ExecuteMsg => {
    return {
      callback: {} as const,
    }
  }
  static updateOwnership = (action: Action): ExecuteMsg => {
    return {
      update_ownership: action,
    }
  }
}
export abstract class ManagerQueryMsgBuilder {
  static moduleVersions = ({
    ids,
  }: CamelCasedProperties<
    Extract<
      QueryMsg,
      {
        module_versions: unknown
      }
    >['module_versions']
  >): QueryMsg => {
    return {
      module_versions: {
        ids,
      } as const,
    }
  }
  static moduleAddresses = ({
    ids,
  }: CamelCasedProperties<
    Extract<
      QueryMsg,
      {
        module_addresses: unknown
      }
    >['module_addresses']
  >): QueryMsg => {
    return {
      module_addresses: {
        ids,
      } as const,
    }
  }
  static moduleInfos = ({
    limit,
    startAfter,
  }: CamelCasedProperties<
    Extract<
      QueryMsg,
      {
        module_infos: unknown
      }
    >['module_infos']
  >): QueryMsg => {
    return {
      module_infos: {
        limit,
        start_after: startAfter,
      } as const,
    }
  }
  static config = (): QueryMsg => {
    return {
      config: {} as const,
    }
  }
  static info = (): QueryMsg => {
    return {
      info: {} as const,
    }
  }
  static ownership = (): QueryMsg => {
    return {
      ownership: {} as const,
    }
  }
}
