/**
 * This file was automatically generated by @cosmwasm/ts-codegen@0.24.0.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */

import { ExecuteMsg, QueryMsg } from './Cw20Ics.types'
import { CamelCasedProperties } from 'type-fest'

export abstract class Cw20IcsExecuteMsgBuilder {
  static receive = ({
    amount,
    msg,
    sender,
  }: CamelCasedProperties<
    Extract<
      ExecuteMsg,
      {
        receive: unknown
      }
    >['receive']
  >): ExecuteMsg => {
    return {
      receive: {
        amount,
        msg,
        sender,
      } as const,
    }
  }
  static transfer = ({
    channel,
    remoteAddress,
    timeout,
  }: CamelCasedProperties<
    Extract<
      ExecuteMsg,
      {
        transfer: unknown
      }
    >['transfer']
  >): ExecuteMsg => {
    return {
      transfer: {
        channel,
        remoteAddress,
        timeout,
      } as const,
    }
  }
  static allow = ({
    contract,
    gasLimit,
  }: CamelCasedProperties<
    Extract<
      ExecuteMsg,
      {
        allow: unknown
      }
    >['allow']
  >): ExecuteMsg => {
    return {
      allow: {
        contract,
        gas_limit: gasLimit,
      } as const,
    }
  }
  static updateAdmin = ({
    admin,
  }: CamelCasedProperties<
    Extract<
      ExecuteMsg,
      {
        update_admin: unknown
      }
    >['update_admin']
  >): ExecuteMsg => {
    return {
      update_admin: {
        admin,
      } as const,
    }
  }
}
export abstract class Cw20IcsQueryMsgBuilder {
  static port = (): QueryMsg => {
    return {
      port: {} as const,
    }
  }
  static listChannels = (): QueryMsg => {
    return {
      list_channels: {} as const,
    }
  }
  static channel = ({
    id,
  }: CamelCasedProperties<
    Extract<
      QueryMsg,
      {
        channel: unknown
      }
    >['channel']
  >): QueryMsg => {
    return {
      channel: {
        id,
      } as const,
    }
  }
  static config = (): QueryMsg => {
    return {
      config: {} as const,
    }
  }
  static admin = (): QueryMsg => {
    return {
      admin: {} as const,
    }
  }
  static allowed = ({
    contract,
  }: CamelCasedProperties<
    Extract<
      QueryMsg,
      {
        allowed: unknown
      }
    >['allowed']
  >): QueryMsg => {
    return {
      allowed: {
        contract,
      } as const,
    }
  }
  static listAllowed = ({
    limit,
    startAfter,
  }: CamelCasedProperties<
    Extract<
      QueryMsg,
      {
        list_allowed: unknown
      }
    >['list_allowed']
  >): QueryMsg => {
    return {
      list_allowed: {
        limit,
        start_after: startAfter,
      } as const,
    }
  }
}
