// @ts-nocheck
/**
 * This file was automatically generated by @abstract-money/ts-codegen@0.35.4.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @abstract-money/ts-codegen generate command to regenerate this file.
 */

import { CamelCasedProperties } from 'type-fest'
import {
  AccountBase,
  Action,
  Addr,
  Binary,
  Coin,
  ConfigResponse,
  ContextResponse,
  ExecuteMsg,
  Expiration,
  InstantiateMsg,
  MigrateMsg,
  Module,
  ModuleInfo,
  ModuleInstallConfig,
  ModuleReference,
  ModuleVersion,
  Namespace,
  OwnershipForString,
  QueryMsg,
  RegisterModuleData,
  SimulateInstallModulesResponse,
  Timestamp,
  Uint64,
  Uint128,
} from './ModuleFactory.types'
export abstract class ModuleFactoryExecuteMsgBuilder {
  static updateConfig = ({
    ansHostAddress,
    versionControlAddress,
  }: CamelCasedProperties<
    Extract<
      ExecuteMsg,
      {
        update_config: unknown
      }
    >['update_config']
  >): ExecuteMsg => {
    return {
      update_config: {
        ans_host_address: ansHostAddress,
        version_control_address: versionControlAddress,
      } as const,
    }
  }
  static installModules = ({
    modules,
  }: CamelCasedProperties<
    Extract<
      ExecuteMsg,
      {
        install_modules: unknown
      }
    >['install_modules']
  >): ExecuteMsg => {
    return {
      install_modules: {
        modules,
      } as const,
    }
  }
  static updateFactoryBinaryMsgs = ({
    toAdd,
    toRemove,
  }: CamelCasedProperties<
    Extract<
      ExecuteMsg,
      {
        update_factory_binary_msgs: unknown
      }
    >['update_factory_binary_msgs']
  >): ExecuteMsg => {
    return {
      update_factory_binary_msgs: {
        to_add: toAdd,
        to_remove: toRemove,
      } as const,
    }
  }
  static updateOwnership = (action: Action): ExecuteMsg => {
    return {
      update_ownership: action,
    }
  }
}
export abstract class ModuleFactoryQueryMsgBuilder {
  static config = (): QueryMsg => {
    return {
      config: {} as const,
    }
  }
  static context = (): QueryMsg => {
    return {
      context: {} as const,
    }
  }
  static simulateInstallModules = ({
    modules,
  }: CamelCasedProperties<
    Extract<
      QueryMsg,
      {
        simulate_install_modules: unknown
      }
    >['simulate_install_modules']
  >): QueryMsg => {
    return {
      simulate_install_modules: {
        modules,
      } as const,
    }
  }
  static ownership = (): QueryMsg => {
    return {
      ownership: {} as const,
    }
  }
}
