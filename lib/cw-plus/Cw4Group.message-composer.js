"use strict";
/**
 * This file was automatically generated by @cosmwasm/ts-codegen@0.11.1.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Cw4GroupMessageComposer = void 0;
var tx_1 = require("cosmjs-types/cosmwasm/wasm/v1/tx");
var encoding_1 = require("@cosmjs/encoding");
var Cw4GroupMessageComposer = /** @class */ (function () {
    function Cw4GroupMessageComposer(sender, contractAddress) {
        var _this = this;
        this.updateAdmin = function (_a, funds) {
            var admin = _a.admin;
            return {
                typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',
                value: tx_1.MsgExecuteContract.fromPartial({
                    sender: _this.sender,
                    contract: _this.contractAddress,
                    msg: (0, encoding_1.toUtf8)(JSON.stringify({
                        update_admin: {
                            admin: admin,
                        },
                    })),
                    funds: funds,
                }),
            };
        };
        this.updateMembers = function (_a, funds) {
            var add = _a.add, remove = _a.remove;
            return {
                typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',
                value: tx_1.MsgExecuteContract.fromPartial({
                    sender: _this.sender,
                    contract: _this.contractAddress,
                    msg: (0, encoding_1.toUtf8)(JSON.stringify({
                        update_members: {
                            add: add,
                            remove: remove,
                        },
                    })),
                    funds: funds,
                }),
            };
        };
        this.addHook = function (_a, funds) {
            var addr = _a.addr;
            return {
                typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',
                value: tx_1.MsgExecuteContract.fromPartial({
                    sender: _this.sender,
                    contract: _this.contractAddress,
                    msg: (0, encoding_1.toUtf8)(JSON.stringify({
                        add_hook: {
                            addr: addr,
                        },
                    })),
                    funds: funds,
                }),
            };
        };
        this.removeHook = function (_a, funds) {
            var addr = _a.addr;
            return {
                typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',
                value: tx_1.MsgExecuteContract.fromPartial({
                    sender: _this.sender,
                    contract: _this.contractAddress,
                    msg: (0, encoding_1.toUtf8)(JSON.stringify({
                        remove_hook: {
                            addr: addr,
                        },
                    })),
                    funds: funds,
                }),
            };
        };
        this.sender = sender;
        this.contractAddress = contractAddress;
        this.updateAdmin = this.updateAdmin.bind(this);
        this.updateMembers = this.updateMembers.bind(this);
        this.addHook = this.addHook.bind(this);
        this.removeHook = this.removeHook.bind(this);
    }
    return Cw4GroupMessageComposer;
}());
exports.Cw4GroupMessageComposer = Cw4GroupMessageComposer;
