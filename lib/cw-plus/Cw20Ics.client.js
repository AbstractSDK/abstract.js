"use strict";
/**
 * This file was automatically generated by @cosmwasm/ts-codegen@0.11.1.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Cw20IcsClient = exports.Cw20IcsQueryClient = void 0;
var tslib_1 = require("tslib");
var Cw20IcsQueryClient = /** @class */ (function () {
    function Cw20IcsQueryClient(client, contractAddress) {
        var _this = this;
        this.port = function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, this.client.queryContractSmart(this.contractAddress, {
                        port: {},
                    })];
            });
        }); };
        this.listChannels = function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, this.client.queryContractSmart(this.contractAddress, {
                        list_channels: {},
                    })];
            });
        }); };
        this.channel = function (_a) {
            var id = _a.id;
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                return tslib_1.__generator(this, function (_b) {
                    return [2 /*return*/, this.client.queryContractSmart(this.contractAddress, {
                            channel: {
                                id: id,
                            },
                        })];
                });
            });
        };
        this.config = function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, this.client.queryContractSmart(this.contractAddress, {
                        config: {},
                    })];
            });
        }); };
        this.admin = function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, this.client.queryContractSmart(this.contractAddress, {
                        admin: {},
                    })];
            });
        }); };
        this.allowed = function (_a) {
            var contract = _a.contract;
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                return tslib_1.__generator(this, function (_b) {
                    return [2 /*return*/, this.client.queryContractSmart(this.contractAddress, {
                            allowed: {
                                contract: contract,
                            },
                        })];
                });
            });
        };
        this.listAllowed = function (_a) {
            var limit = _a.limit, startAfter = _a.startAfter;
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                return tslib_1.__generator(this, function (_b) {
                    return [2 /*return*/, this.client.queryContractSmart(this.contractAddress, {
                            list_allowed: {
                                limit: limit,
                                start_after: startAfter,
                            },
                        })];
                });
            });
        };
        this.client = client;
        this.contractAddress = contractAddress;
        this.port = this.port.bind(this);
        this.listChannels = this.listChannels.bind(this);
        this.channel = this.channel.bind(this);
        this.config = this.config.bind(this);
        this.admin = this.admin.bind(this);
        this.allowed = this.allowed.bind(this);
        this.listAllowed = this.listAllowed.bind(this);
    }
    return Cw20IcsQueryClient;
}());
exports.Cw20IcsQueryClient = Cw20IcsQueryClient;
var Cw20IcsClient = /** @class */ (function (_super) {
    tslib_1.__extends(Cw20IcsClient, _super);
    function Cw20IcsClient(client, sender, contractAddress) {
        var _this = _super.call(this, client, contractAddress) || this;
        _this.receive = function (_a, fee, memo, funds) {
            var amount = _a.amount, msg = _a.msg, sender = _a.sender;
            if (fee === void 0) { fee = 'auto'; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                return tslib_1.__generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.execute(this.sender, this.contractAddress, {
                                receive: {
                                    amount: amount,
                                    msg: msg,
                                    sender: sender,
                                },
                            }, fee, memo, funds)];
                        case 1: return [2 /*return*/, _b.sent()];
                    }
                });
            });
        };
        _this.transfer = function (_a, fee, memo, funds) {
            var channel = _a.channel, remoteAddress = _a.remoteAddress, timeout = _a.timeout;
            if (fee === void 0) { fee = 'auto'; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                return tslib_1.__generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.execute(this.sender, this.contractAddress, {
                                transfer: {
                                    channel: channel,
                                    remote_address: remoteAddress,
                                    timeout: timeout,
                                },
                            }, fee, memo, funds)];
                        case 1: return [2 /*return*/, _b.sent()];
                    }
                });
            });
        };
        _this.allow = function (_a, fee, memo, funds) {
            var contract = _a.contract, gasLimit = _a.gasLimit;
            if (fee === void 0) { fee = 'auto'; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                return tslib_1.__generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.execute(this.sender, this.contractAddress, {
                                allow: {
                                    contract: contract,
                                    gas_limit: gasLimit,
                                },
                            }, fee, memo, funds)];
                        case 1: return [2 /*return*/, _b.sent()];
                    }
                });
            });
        };
        _this.updateAdmin = function (_a, fee, memo, funds) {
            var admin = _a.admin;
            if (fee === void 0) { fee = 'auto'; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                return tslib_1.__generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.execute(this.sender, this.contractAddress, {
                                update_admin: {
                                    admin: admin,
                                },
                            }, fee, memo, funds)];
                        case 1: return [2 /*return*/, _b.sent()];
                    }
                });
            });
        };
        _this.client = client;
        _this.sender = sender;
        _this.contractAddress = contractAddress;
        _this.receive = _this.receive.bind(_this);
        _this.transfer = _this.transfer.bind(_this);
        _this.allow = _this.allow.bind(_this);
        _this.updateAdmin = _this.updateAdmin.bind(_this);
        return _this;
    }
    return Cw20IcsClient;
}(Cw20IcsQueryClient));
exports.Cw20IcsClient = Cw20IcsClient;
