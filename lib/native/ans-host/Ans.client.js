"use strict";
/**
 * This file was automatically generated by @cosmwasm/ts-codegen@0.19.0.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AnsClient = exports.AnsQueryClient = void 0;
var tslib_1 = require("tslib");
var AnsQueryClient = /** @class */ (function () {
    function AnsQueryClient(client, contractAddress) {
        var _this = this;
        this.assets = function (_a) {
            var names = _a.names;
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                return tslib_1.__generator(this, function (_b) {
                    return [2 /*return*/, this.client.queryContractSmart(this.contractAddress, {
                            assets: {
                                names: names,
                            },
                        })];
                });
            });
        };
        this.assetList = function (_a) {
            var pageSize = _a.pageSize, pageToken = _a.pageToken;
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                return tslib_1.__generator(this, function (_b) {
                    return [2 /*return*/, this.client.queryContractSmart(this.contractAddress, {
                            asset_list: {
                                page_size: pageSize,
                                page_token: pageToken,
                            },
                        })];
                });
            });
        };
        this.contracts = function (_a) {
            var names = _a.names;
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                return tslib_1.__generator(this, function (_b) {
                    return [2 /*return*/, this.client.queryContractSmart(this.contractAddress, {
                            contracts: {
                                names: names,
                            },
                        })];
                });
            });
        };
        this.contractList = function (_a) {
            var pageSize = _a.pageSize, pageToken = _a.pageToken;
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                return tslib_1.__generator(this, function (_b) {
                    return [2 /*return*/, this.client.queryContractSmart(this.contractAddress, {
                            contract_list: {
                                page_size: pageSize,
                                page_token: pageToken,
                            },
                        })];
                });
            });
        };
        this.channels = function (_a) {
            var names = _a.names;
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                return tslib_1.__generator(this, function (_b) {
                    return [2 /*return*/, this.client.queryContractSmart(this.contractAddress, {
                            channels: {
                                names: names,
                            },
                        })];
                });
            });
        };
        this.channelList = function (_a) {
            var pageSize = _a.pageSize, pageToken = _a.pageToken;
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                return tslib_1.__generator(this, function (_b) {
                    return [2 /*return*/, this.client.queryContractSmart(this.contractAddress, {
                            channel_list: {
                                page_size: pageSize,
                                page_token: pageToken,
                            },
                        })];
                });
            });
        };
        this.registeredDexes = function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, this.client.queryContractSmart(this.contractAddress, {
                        registered_dexes: {},
                    })];
            });
        }); };
        this.pools = function (_a) {
            var keys = _a.keys;
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                return tslib_1.__generator(this, function (_b) {
                    return [2 /*return*/, this.client.queryContractSmart(this.contractAddress, {
                            pools: {
                                keys: keys,
                            },
                        })];
                });
            });
        };
        this.poolList = function (_a) {
            var filter = _a.filter, pageSize = _a.pageSize, pageToken = _a.pageToken;
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                return tslib_1.__generator(this, function (_b) {
                    return [2 /*return*/, this.client.queryContractSmart(this.contractAddress, {
                            pool_list: {
                                filter: filter,
                                page_size: pageSize,
                                page_token: pageToken,
                            },
                        })];
                });
            });
        };
        this.poolMetadatas = function (_a) {
            var keys = _a.keys;
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                return tslib_1.__generator(this, function (_b) {
                    return [2 /*return*/, this.client.queryContractSmart(this.contractAddress, {
                            pool_metadatas: {
                                keys: keys,
                            },
                        })];
                });
            });
        };
        this.poolMetadataList = function (_a) {
            var filter = _a.filter, pageSize = _a.pageSize, pageToken = _a.pageToken;
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                return tslib_1.__generator(this, function (_b) {
                    return [2 /*return*/, this.client.queryContractSmart(this.contractAddress, {
                            pool_metadata_list: {
                                filter: filter,
                                page_size: pageSize,
                                page_token: pageToken,
                            },
                        })];
                });
            });
        };
        this.client = client;
        this.contractAddress = contractAddress;
        this.assets = this.assets.bind(this);
        this.assetList = this.assetList.bind(this);
        this.contracts = this.contracts.bind(this);
        this.contractList = this.contractList.bind(this);
        this.channels = this.channels.bind(this);
        this.channelList = this.channelList.bind(this);
        this.registeredDexes = this.registeredDexes.bind(this);
        this.pools = this.pools.bind(this);
        this.poolList = this.poolList.bind(this);
        this.poolMetadatas = this.poolMetadatas.bind(this);
        this.poolMetadataList = this.poolMetadataList.bind(this);
    }
    return AnsQueryClient;
}());
exports.AnsQueryClient = AnsQueryClient;
var AnsClient = /** @class */ (function (_super) {
    tslib_1.__extends(AnsClient, _super);
    function AnsClient(client, sender, contractAddress) {
        var _this = _super.call(this, client, contractAddress) || this;
        _this.updateContractAddresses = function (_a, fee, memo, funds) {
            var toAdd = _a.toAdd, toRemove = _a.toRemove;
            if (fee === void 0) { fee = 'auto'; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                return tslib_1.__generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.execute(this.sender, this.contractAddress, {
                                update_contract_addresses: {
                                    to_add: toAdd,
                                    to_remove: toRemove,
                                },
                            }, fee, memo, funds)];
                        case 1: return [2 /*return*/, _b.sent()];
                    }
                });
            });
        };
        _this.updateAssetAddresses = function (_a, fee, memo, funds) {
            var toAdd = _a.toAdd, toRemove = _a.toRemove;
            if (fee === void 0) { fee = 'auto'; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                return tslib_1.__generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.execute(this.sender, this.contractAddress, {
                                update_asset_addresses: {
                                    to_add: toAdd,
                                    to_remove: toRemove,
                                },
                            }, fee, memo, funds)];
                        case 1: return [2 /*return*/, _b.sent()];
                    }
                });
            });
        };
        _this.updateChannels = function (_a, fee, memo, funds) {
            var toAdd = _a.toAdd, toRemove = _a.toRemove;
            if (fee === void 0) { fee = 'auto'; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                return tslib_1.__generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.execute(this.sender, this.contractAddress, {
                                update_channels: {
                                    to_add: toAdd,
                                    to_remove: toRemove,
                                },
                            }, fee, memo, funds)];
                        case 1: return [2 /*return*/, _b.sent()];
                    }
                });
            });
        };
        _this.updateDexes = function (_a, fee, memo, funds) {
            var toAdd = _a.toAdd, toRemove = _a.toRemove;
            if (fee === void 0) { fee = 'auto'; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                return tslib_1.__generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.execute(this.sender, this.contractAddress, {
                                update_dexes: {
                                    to_add: toAdd,
                                    to_remove: toRemove,
                                },
                            }, fee, memo, funds)];
                        case 1: return [2 /*return*/, _b.sent()];
                    }
                });
            });
        };
        _this.updatePools = function (_a, fee, memo, funds) {
            var toAdd = _a.toAdd, toRemove = _a.toRemove;
            if (fee === void 0) { fee = 'auto'; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                return tslib_1.__generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.execute(this.sender, this.contractAddress, {
                                update_pools: {
                                    to_add: toAdd,
                                    to_remove: toRemove,
                                },
                            }, fee, memo, funds)];
                        case 1: return [2 /*return*/, _b.sent()];
                    }
                });
            });
        };
        _this.setAdmin = function (_a, fee, memo, funds) {
            var admin = _a.admin;
            if (fee === void 0) { fee = 'auto'; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                return tslib_1.__generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.execute(this.sender, this.contractAddress, {
                                set_admin: {
                                    admin: admin,
                                },
                            }, fee, memo, funds)];
                        case 1: return [2 /*return*/, _b.sent()];
                    }
                });
            });
        };
        _this.client = client;
        _this.sender = sender;
        _this.contractAddress = contractAddress;
        _this.updateContractAddresses = _this.updateContractAddresses.bind(_this);
        _this.updateAssetAddresses = _this.updateAssetAddresses.bind(_this);
        _this.updateChannels = _this.updateChannels.bind(_this);
        _this.updateDexes = _this.updateDexes.bind(_this);
        _this.updatePools = _this.updatePools.bind(_this);
        _this.setAdmin = _this.setAdmin.bind(_this);
        return _this;
    }
    return AnsClient;
}(AnsQueryClient));
exports.AnsClient = AnsClient;
