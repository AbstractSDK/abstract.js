"use strict";
/**
 * This file was automatically generated by @cosmwasm/ts-codegen@0.19.0.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.useFactoryReceiveMutation = exports.useFactoryUpdateConfigMutation = exports.useFactoryCreateOsMutation = exports.useFactoryConfigQuery = exports.factoryQueryKeys = void 0;
var tslib_1 = require("tslib");
var react_query_1 = require("@tanstack/react-query");
exports.factoryQueryKeys = {
    contract: [
        {
            contract: 'factory',
        },
    ],
    address: function (contractAddress) {
        return [tslib_1.__assign(tslib_1.__assign({}, exports.factoryQueryKeys.contract[0]), { address: contractAddress })];
    },
    config: function (contractAddress, args) {
        return [tslib_1.__assign(tslib_1.__assign({}, exports.factoryQueryKeys.address(contractAddress)[0]), { method: 'config', args: args })];
    },
};
function useFactoryConfigQuery(_a) {
    var client = _a.client, options = _a.options;
    return (0, react_query_1.useQuery)(exports.factoryQueryKeys.config(client === null || client === void 0 ? void 0 : client.contractAddress), function () { return (client ? client.config() : Promise.reject(new Error('Invalid client'))); }, tslib_1.__assign(tslib_1.__assign({}, options), { enabled: !!client && ((options === null || options === void 0 ? void 0 : options.enabled) != undefined ? options.enabled : true) }));
}
exports.useFactoryConfigQuery = useFactoryConfigQuery;
function useFactoryCreateOsMutation(options) {
    return (0, react_query_1.useMutation)(function (_a) {
        var client = _a.client, msg = _a.msg, _b = _a.args, _c = _b === void 0 ? {} : _b, fee = _c.fee, memo = _c.memo, funds = _c.funds;
        return client.createOs(msg, fee, memo, funds);
    }, options);
}
exports.useFactoryCreateOsMutation = useFactoryCreateOsMutation;
function useFactoryUpdateConfigMutation(options) {
    return (0, react_query_1.useMutation)(function (_a) {
        var client = _a.client, msg = _a.msg, _b = _a.args, _c = _b === void 0 ? {} : _b, fee = _c.fee, memo = _c.memo, funds = _c.funds;
        return client.updateConfig(msg, fee, memo, funds);
    }, options);
}
exports.useFactoryUpdateConfigMutation = useFactoryUpdateConfigMutation;
function useFactoryReceiveMutation(options) {
    return (0, react_query_1.useMutation)(function (_a) {
        var client = _a.client, msg = _a.msg, _b = _a.args, _c = _b === void 0 ? {} : _b, fee = _c.fee, memo = _c.memo, funds = _c.funds;
        return client.receive(msg, fee, memo, funds);
    }, options);
}
exports.useFactoryReceiveMutation = useFactoryReceiveMutation;
