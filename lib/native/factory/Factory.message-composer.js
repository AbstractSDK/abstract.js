"use strict";
/**
 * This file was automatically generated by @cosmwasm/ts-codegen@0.19.0.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FactoryMessageComposer = void 0;
var tx_1 = require("cosmjs-types/cosmwasm/wasm/v1/tx");
var encoding_1 = require("@cosmjs/encoding");
var FactoryMessageComposer = /** @class */ (function () {
    function FactoryMessageComposer(sender, contractAddress) {
        var _this = this;
        this.receive = function (_a, funds) {
            var amount = _a.amount, msg = _a.msg, sender = _a.sender;
            return {
                typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',
                value: tx_1.MsgExecuteContract.fromPartial({
                    sender: _this.sender,
                    contract: _this.contractAddress,
                    msg: (0, encoding_1.toUtf8)(JSON.stringify({
                        receive: {
                            amount: amount,
                            msg: msg,
                            sender: sender,
                        },
                    })),
                    funds: funds,
                }),
            };
        };
        this.updateConfig = function (_a, funds) {
            var admin = _a.admin, ansHostContract = _a.ansHostContract, moduleFactoryAddress = _a.moduleFactoryAddress, subscriptionAddress = _a.subscriptionAddress, versionControlContract = _a.versionControlContract;
            return {
                typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',
                value: tx_1.MsgExecuteContract.fromPartial({
                    sender: _this.sender,
                    contract: _this.contractAddress,
                    msg: (0, encoding_1.toUtf8)(JSON.stringify({
                        update_config: {
                            admin: admin,
                            ans_host_contract: ansHostContract,
                            module_factory_address: moduleFactoryAddress,
                            subscription_address: subscriptionAddress,
                            version_control_contract: versionControlContract,
                        },
                    })),
                    funds: funds,
                }),
            };
        };
        this.createOs = function (_a, funds) {
            var description = _a.description, governance = _a.governance, link = _a.link, name = _a.name;
            return {
                typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',
                value: tx_1.MsgExecuteContract.fromPartial({
                    sender: _this.sender,
                    contract: _this.contractAddress,
                    msg: (0, encoding_1.toUtf8)(JSON.stringify({
                        create_os: {
                            description: description,
                            governance: governance,
                            link: link,
                            name: name,
                        },
                    })),
                    funds: funds,
                }),
            };
        };
        this.sender = sender;
        this.contractAddress = contractAddress;
        this.receive = this.receive.bind(this);
        this.updateConfig = this.updateConfig.bind(this);
        this.createOs = this.createOs.bind(this);
    }
    return FactoryMessageComposer;
}());
exports.FactoryMessageComposer = FactoryMessageComposer;
