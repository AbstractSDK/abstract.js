"use strict";
/**
 * This file was automatically generated by @cosmwasm/ts-codegen@0.19.0.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ManagerClient = exports.ManagerQueryClient = void 0;
var tslib_1 = require("tslib");
var ManagerQueryClient = /** @class */ (function () {
    function ManagerQueryClient(client, contractAddress) {
        var _this = this;
        this.moduleVersions = function (_a) {
            var ids = _a.ids;
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                return tslib_1.__generator(this, function (_b) {
                    return [2 /*return*/, this.client.queryContractSmart(this.contractAddress, {
                            module_versions: {
                                ids: ids,
                            },
                        })];
                });
            });
        };
        this.moduleAddresses = function (_a) {
            var ids = _a.ids;
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                return tslib_1.__generator(this, function (_b) {
                    return [2 /*return*/, this.client.queryContractSmart(this.contractAddress, {
                            module_addresses: {
                                ids: ids,
                            },
                        })];
                });
            });
        };
        this.moduleInfos = function (_a) {
            var pageSize = _a.pageSize, pageToken = _a.pageToken;
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                return tslib_1.__generator(this, function (_b) {
                    return [2 /*return*/, this.client.queryContractSmart(this.contractAddress, {
                            module_infos: {
                                page_size: pageSize,
                                page_token: pageToken,
                            },
                        })];
                });
            });
        };
        this.config = function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, this.client.queryContractSmart(this.contractAddress, {
                        config: {},
                    })];
            });
        }); };
        this.info = function () { return tslib_1.__awaiter(_this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, this.client.queryContractSmart(this.contractAddress, {
                        info: {},
                    })];
            });
        }); };
        this.client = client;
        this.contractAddress = contractAddress;
        this.moduleVersions = this.moduleVersions.bind(this);
        this.moduleAddresses = this.moduleAddresses.bind(this);
        this.moduleInfos = this.moduleInfos.bind(this);
        this.config = this.config.bind(this);
        this.info = this.info.bind(this);
    }
    return ManagerQueryClient;
}());
exports.ManagerQueryClient = ManagerQueryClient;
var ManagerClient = /** @class */ (function (_super) {
    tslib_1.__extends(ManagerClient, _super);
    function ManagerClient(client, sender, contractAddress) {
        var _this = _super.call(this, client, contractAddress) || this;
        _this.execOnModule = function (_a, fee, memo, funds) {
            var execMsg = _a.execMsg, moduleId = _a.moduleId;
            if (fee === void 0) { fee = 'auto'; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                return tslib_1.__generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.execute(this.sender, this.contractAddress, {
                                exec_on_module: {
                                    exec_msg: execMsg,
                                    module_id: moduleId,
                                },
                            }, fee, memo, funds)];
                        case 1: return [2 /*return*/, _b.sent()];
                    }
                });
            });
        };
        _this.updateModuleAddresses = function (_a, fee, memo, funds) {
            var toAdd = _a.toAdd, toRemove = _a.toRemove;
            if (fee === void 0) { fee = 'auto'; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                return tslib_1.__generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.execute(this.sender, this.contractAddress, {
                                update_module_addresses: {
                                    to_add: toAdd,
                                    to_remove: toRemove,
                                },
                            }, fee, memo, funds)];
                        case 1: return [2 /*return*/, _b.sent()];
                    }
                });
            });
        };
        _this.installModule = function (_a, fee, memo, funds) {
            var initMsg = _a.initMsg, module = _a.module;
            if (fee === void 0) { fee = 'auto'; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                return tslib_1.__generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.execute(this.sender, this.contractAddress, {
                                install_module: {
                                    init_msg: initMsg,
                                    module: module,
                                },
                            }, fee, memo, funds)];
                        case 1: return [2 /*return*/, _b.sent()];
                    }
                });
            });
        };
        _this.registerModule = function (_a, fee, memo, funds) {
            var module = _a.module, moduleAddr = _a.moduleAddr;
            if (fee === void 0) { fee = 'auto'; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                return tslib_1.__generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.execute(this.sender, this.contractAddress, {
                                register_module: {
                                    module: module,
                                    module_addr: moduleAddr,
                                },
                            }, fee, memo, funds)];
                        case 1: return [2 /*return*/, _b.sent()];
                    }
                });
            });
        };
        _this.removeModule = function (_a, fee, memo, funds) {
            var moduleId = _a.moduleId;
            if (fee === void 0) { fee = 'auto'; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                return tslib_1.__generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.execute(this.sender, this.contractAddress, {
                                remove_module: {
                                    module_id: moduleId,
                                },
                            }, fee, memo, funds)];
                        case 1: return [2 /*return*/, _b.sent()];
                    }
                });
            });
        };
        _this.upgrade = function (_a, fee, memo, funds) {
            var modules = _a.modules;
            if (fee === void 0) { fee = 'auto'; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                return tslib_1.__generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.execute(this.sender, this.contractAddress, {
                                upgrade: {
                                    modules: modules,
                                },
                            }, fee, memo, funds)];
                        case 1: return [2 /*return*/, _b.sent()];
                    }
                });
            });
        };
        _this.updateInfo = function (_a, fee, memo, funds) {
            var description = _a.description, link = _a.link, name = _a.name;
            if (fee === void 0) { fee = 'auto'; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                return tslib_1.__generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.execute(this.sender, this.contractAddress, {
                                update_info: {
                                    description: description,
                                    link: link,
                                    name: name,
                                },
                            }, fee, memo, funds)];
                        case 1: return [2 /*return*/, _b.sent()];
                    }
                });
            });
        };
        _this.setRoot = function (_a, fee, memo, funds) {
            var governanceType = _a.governanceType, root = _a.root;
            if (fee === void 0) { fee = 'auto'; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                return tslib_1.__generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.execute(this.sender, this.contractAddress, {
                                set_root: {
                                    governance_type: governanceType,
                                    root: root,
                                },
                            }, fee, memo, funds)];
                        case 1: return [2 /*return*/, _b.sent()];
                    }
                });
            });
        };
        _this.suspendOs = function (_a, fee, memo, funds) {
            var newStatus = _a.newStatus;
            if (fee === void 0) { fee = 'auto'; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                return tslib_1.__generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.execute(this.sender, this.contractAddress, {
                                suspend_os: {
                                    new_status: newStatus,
                                },
                            }, fee, memo, funds)];
                        case 1: return [2 /*return*/, _b.sent()];
                    }
                });
            });
        };
        _this.enableIBC = function (_a, fee, memo, funds) {
            var newStatus = _a.newStatus;
            if (fee === void 0) { fee = 'auto'; }
            return tslib_1.__awaiter(_this, void 0, void 0, function () {
                return tslib_1.__generator(this, function (_b) {
                    switch (_b.label) {
                        case 0: return [4 /*yield*/, this.client.execute(this.sender, this.contractAddress, {
                                enable_i_b_c: {
                                    new_status: newStatus,
                                },
                            }, fee, memo, funds)];
                        case 1: return [2 /*return*/, _b.sent()];
                    }
                });
            });
        };
        _this.client = client;
        _this.sender = sender;
        _this.contractAddress = contractAddress;
        _this.execOnModule = _this.execOnModule.bind(_this);
        _this.updateModuleAddresses = _this.updateModuleAddresses.bind(_this);
        _this.installModule = _this.installModule.bind(_this);
        _this.registerModule = _this.registerModule.bind(_this);
        _this.removeModule = _this.removeModule.bind(_this);
        _this.upgrade = _this.upgrade.bind(_this);
        _this.updateInfo = _this.updateInfo.bind(_this);
        _this.setRoot = _this.setRoot.bind(_this);
        _this.suspendOs = _this.suspendOs.bind(_this);
        _this.enableIBC = _this.enableIBC.bind(_this);
        return _this;
    }
    return ManagerClient;
}(ManagerQueryClient));
exports.ManagerClient = ManagerClient;
