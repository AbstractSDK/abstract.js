"use strict";
/**
 * This file was automatically generated by @cosmwasm/ts-codegen@0.21.1.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run the @cosmwasm/ts-codegen generate command to regenerate this file.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.StakingMessageComposer = void 0;
var tx_1 = require("cosmjs-types/cosmwasm/wasm/v1/tx");
var encoding_1 = require("@cosmjs/encoding");
var StakingMessageComposer = /** @class */ (function () {
    function StakingMessageComposer(sender, contractAddress) {
        var _this = this;
        this.base = function (funds) {
            return {
                typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',
                value: tx_1.MsgExecuteContract.fromPartial({
                    sender: _this.sender,
                    contract: _this.contractAddress,
                    msg: (0, encoding_1.toUtf8)(JSON.stringify({
                        base: {},
                    })),
                    funds: funds,
                }),
            };
        };
        this.app = function (_a, funds) {
            var proxyAddress = _a.proxyAddress, request = _a.request;
            return {
                typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',
                value: tx_1.MsgExecuteContract.fromPartial({
                    sender: _this.sender,
                    contract: _this.contractAddress,
                    msg: (0, encoding_1.toUtf8)(JSON.stringify({
                        app: {
                            proxy_address: proxyAddress,
                            request: request,
                        },
                    })),
                    funds: funds,
                }),
            };
        };
        this.ibcCallback = function (_a, funds) {
            var id = _a.id, msg = _a.msg;
            return {
                typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',
                value: tx_1.MsgExecuteContract.fromPartial({
                    sender: _this.sender,
                    contract: _this.contractAddress,
                    msg: (0, encoding_1.toUtf8)(JSON.stringify({
                        ibc_callback: {
                            id: id,
                            msg: msg,
                        },
                    })),
                    funds: funds,
                }),
            };
        };
        this.receive = function (funds) {
            return {
                typeUrl: '/cosmwasm.wasm.v1.MsgExecuteContract',
                value: tx_1.MsgExecuteContract.fromPartial({
                    sender: _this.sender,
                    contract: _this.contractAddress,
                    msg: (0, encoding_1.toUtf8)(JSON.stringify({
                        receive: {},
                    })),
                    funds: funds,
                }),
            };
        };
        this.sender = sender;
        this.contractAddress = contractAddress;
        this.base = this.base.bind(this);
        this.app = this.app.bind(this);
        this.ibcCallback = this.ibcCallback.bind(this);
        this.receive = this.receive.bind(this);
    }
    return StakingMessageComposer;
}());
exports.StakingMessageComposer = StakingMessageComposer;
